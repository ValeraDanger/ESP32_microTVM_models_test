def @main(%input: Tensor[(1, 3, 224, 224), float32] /* ty=Tensor[(1, 3, 224, 224), float32] span=input_Conv_0_QuantizeLinear.input:0:0 */) -> Tensor[(1, 1000), float32] {
  %0 = qnn.quantize(%input, 0.0186584f /* ty=float32 span=input_Conv_0_QuantizeLinear.input_scale:0:0 */, 114 /* ty=int32 span=input_Conv_0_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 3, 224, 224), uint8] span=input_Conv_0_QuantizeLinear:0:0 */;
  %1 = qnn.dequantize(%0, 0.0186584f /* ty=float32 span=input_Conv_0_QuantizeLinear.input_scale:0:0 */, 114 /* ty=int32 span=input_Conv_0_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 3, 224, 224), float32] span=input_Conv_0_DequantizeLinear:0:0 */;
  %2 = qnn.dequantize(meta[relay.Constant][0] /* ty=Tensor[(24, 3, 3, 3), int8] span=ConvBnFusion_W_conv1.0.weight_DequantizeLinear.ConvBnFusion_W_conv1.0.weight_quantized:0:0 */, 0.00824233f /* ty=float32 span=ConvBnFusion_W_conv1.0.weight_DequantizeLinear.ConvBnFusion_W_conv1.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_conv1.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(24, 3, 3, 3), float32] span=ConvBnFusion_W_conv1.0.weight_DequantizeLinear:0:0 */;
  %3 = qnn.dequantize(meta[relay.Constant][1] /* ty=Tensor[(24), int32] span=ConvBnFusion_BN_B_conv1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_conv1.1.bias_quantized:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_conv1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_conv1.1.bias_scale:0:0 */, meta[relay.Constant][3] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_conv1.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(24), float32] span=ConvBnFusion_BN_B_conv1.1.bias_DequantizeLinear:0:0 */;
  %4 = expand_dims(%3, axis=1, num_newaxis=2) /* ty=Tensor[(24, 1, 1), float32] */;
  %5 = nn.conv2d(%1, %2, strides=[2, 2], padding=[1, 1, 1, 1], channels=24, kernel_size=[3, 3]) /* ty=Tensor[(1, 24, 112, 112), float32] span=Conv_0_quant:0:0 */;
  %6 = expand_dims(%4, axis=0) /* ty=Tensor[(1, 24, 1, 1), float32] */;
  %7 = add(%5, %6) /* ty=Tensor[(1, 24, 112, 112), float32] */;
  %8 = qnn.quantize(%7, 0.0570685f /* ty=float32 span=340_Conv_0_QuantizeLinear.340_scale:0:0 */, 0 /* ty=int32 span=340_Conv_0_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 24, 112, 112), uint8] span=340_Conv_0_QuantizeLinear:0:0 */;
  %9 = qnn.dequantize(%8, 0.0570685f /* ty=float32 span=340_Conv_0_QuantizeLinear.340_scale:0:0 */, 0 /* ty=int32 span=340_MaxPool_3_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 24, 112, 112), float32] span=340_MaxPool_3_DequantizeLinear:0:0 */;
  %10 = nn.max_pool2d(%9, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]) /* ty=Tensor[(1, 24, 56, 56), float32] span=MaxPool_3_quant:0:0 */;
  %11 = qnn.quantize(%10, 0.0570685f /* ty=float32 span=340_Conv_0_QuantizeLinear.340_scale:0:0 */, 0 /* ty=int32 span=342_MaxPool_3_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 24, 56, 56), uint8] span=342_MaxPool_3_QuantizeLinear:0:0 */;
  %12 = qnn.dequantize(%11, 0.0570685f /* ty=float32 span=340_Conv_0_QuantizeLinear.340_scale:0:0 */, 0 /* ty=int32 span=342_Conv_9_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 24, 56, 56), float32] span=342_Conv_9_DequantizeLinear:0:0 */;
  %13 = qnn.dequantize(meta[relay.Constant][4] /* ty=Tensor[(24, 1, 3, 3), int8] span=ConvBnFusion_W_stage2.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch1.0.weight_quantized:0:0 */, 0.019784f /* ty=float32 span=ConvBnFusion_W_stage2.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch1.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.0.branch1.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(24, 1, 3, 3), float32] span=ConvBnFusion_W_stage2.0.branch1.0.weight_DequantizeLinear:0:0 */;
  %14 = qnn.dequantize(meta[relay.Constant][5] /* ty=Tensor[(24), int32] span=ConvBnFusion_BN_B_stage2.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch1.1.bias_quantized:0:0 */, meta[relay.Constant][6] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch1.1.bias_scale:0:0 */, meta[relay.Constant][7] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.0.branch1.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(24), float32] span=ConvBnFusion_BN_B_stage2.0.branch1.1.bias_DequantizeLinear:0:0 */;
  %15 = expand_dims(%14, axis=1, num_newaxis=2) /* ty=Tensor[(24, 1, 1), float32] */;
  %16 = nn.conv2d(%12, %13, strides=[2, 2], padding=[1, 1, 1, 1], groups=24, channels=24, kernel_size=[3, 3]) /* ty=Tensor[(1, 24, 28, 28), float32] span=Conv_4_quant:0:0 */;
  %17 = expand_dims(%15, axis=0) /* ty=Tensor[(1, 24, 1, 1), float32] */;
  %18 = add(%16, %17) /* ty=Tensor[(1, 24, 28, 28), float32] */;
  %19 = qnn.quantize(%18, 0.0776699f /* ty=float32 span=344_Conv_4_QuantizeLinear.344_scale:0:0 */, 121 /* ty=int32 span=344_Conv_4_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 24, 28, 28), uint8] span=344_Conv_4_QuantizeLinear:0:0 */;
  %20 = qnn.dequantize(%19, 0.0776699f /* ty=float32 span=344_Conv_4_QuantizeLinear.344_scale:0:0 */, 121 /* ty=int32 span=344_Conv_6_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 24, 28, 28), float32] span=344_Conv_6_DequantizeLinear:0:0 */;
  %21 = qnn.dequantize(meta[relay.Constant][8] /* ty=Tensor[(58, 24, 1, 1), int8] span=ConvBnFusion_W_stage2.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch1.2.weight_quantized:0:0 */, 0.0109672f /* ty=float32 span=ConvBnFusion_W_stage2.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch1.2.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.0.branch1.2.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 24, 1, 1), float32] span=ConvBnFusion_W_stage2.0.branch1.2.weight_DequantizeLinear:0:0 */;
  %22 = qnn.dequantize(meta[relay.Constant][9] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch1.3.bias_quantized:0:0 */, meta[relay.Constant][10] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch1.3.bias_scale:0:0 */, meta[relay.Constant][11] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.0.branch1.3.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.0.branch1.3.bias_DequantizeLinear:0:0 */;
  %23 = expand_dims(%22, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %24 = nn.conv2d(%20, %21, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_6_quant:0:0 */;
  %25 = expand_dims(%23, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %26 = add(%24, %25) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %27 = qnn.quantize(%26, 0.0385724f /* ty=float32 span=346_Conv_6_QuantizeLinear.346_scale:0:0 */, 0 /* ty=int32 span=346_Conv_6_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=346_Conv_6_QuantizeLinear:0:0 */;
  %28 = qnn.dequantize(meta[relay.Constant][12] /* ty=Tensor[(58, 24, 1, 1), int8] span=ConvBnFusion_W_stage2.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.0.weight_quantized:0:0 */, 0.0111158f /* ty=float32 span=ConvBnFusion_W_stage2.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.0.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 24, 1, 1), float32] span=ConvBnFusion_W_stage2.0.branch2.0.weight_DequantizeLinear:0:0 */;
  %29 = qnn.dequantize(meta[relay.Constant][13] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.1.bias_scale:0:0 */, meta[relay.Constant][15] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.1.bias_DequantizeLinear:0:0 */;
  %30 = expand_dims(%29, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %31 = nn.conv2d(%12, %28, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 56, 56), float32] span=Conv_9_quant:0:0 */;
  %32 = expand_dims(%30, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %33 = add(%31, %32) /* ty=Tensor[(1, 58, 56, 56), float32] */;
  %34 = qnn.quantize(%33, 0.0185046f /* ty=float32 span=349_Conv_9_QuantizeLinear.349_scale:0:0 */, 0 /* ty=int32 span=349_Conv_9_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 56, 56), uint8] span=349_Conv_9_QuantizeLinear:0:0 */;
  %35 = qnn.dequantize(%34, 0.0185046f /* ty=float32 span=349_Conv_9_QuantizeLinear.349_scale:0:0 */, 0 /* ty=int32 span=349_Conv_12_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 56, 56), float32] span=349_Conv_12_DequantizeLinear:0:0 */;
  %36 = qnn.dequantize(meta[relay.Constant][16] /* ty=Tensor[(58, 1, 3, 3), int8] span=ConvBnFusion_W_stage2.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.3.weight_quantized:0:0 */, 0.0524339f /* ty=float32 span=ConvBnFusion_W_stage2.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.0.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 1, 3, 3), float32] span=ConvBnFusion_W_stage2.0.branch2.3.weight_DequantizeLinear:0:0 */;
  %37 = qnn.dequantize(meta[relay.Constant][17] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][18] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.4.bias_scale:0:0 */, meta[relay.Constant][19] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.4.bias_DequantizeLinear:0:0 */;
  %38 = expand_dims(%37, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %39 = nn.conv2d(%35, %36, strides=[2, 2], padding=[1, 1, 1, 1], groups=58, channels=58, kernel_size=[3, 3]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_12_quant:0:0 */;
  %40 = expand_dims(%38, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %41 = add(%39, %40) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %42 = qnn.quantize(%41, 0.0608881f /* ty=float32 span=352_Conv_12_QuantizeLinear.352_scale:0:0 */, 124 /* ty=int32 span=352_Conv_12_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=352_Conv_12_QuantizeLinear:0:0 */;
  %43 = qnn.dequantize(%42, 0.0608881f /* ty=float32 span=352_Conv_12_QuantizeLinear.352_scale:0:0 */, 124 /* ty=int32 span=352_Conv_14_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=352_Conv_14_DequantizeLinear:0:0 */;
  %44 = qnn.dequantize(meta[relay.Constant][20] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.5.weight_quantized:0:0 */, 0.00495452f /* ty=float32 span=ConvBnFusion_W_stage2.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.0.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.0.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.0.branch2.5.weight_DequantizeLinear:0:0 */;
  %45 = qnn.dequantize(meta[relay.Constant][21] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][22] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.0.branch2.6.bias_scale:0:0 */, meta[relay.Constant][23] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.0.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.0.branch2.6.bias_DequantizeLinear:0:0 */;
  %46 = expand_dims(%45, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %47 = nn.conv2d(%43, %44, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_14_quant:0:0 */;
  %48 = expand_dims(%46, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %49 = add(%47, %48) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %50 = qnn.quantize(%49, 0.0246652f /* ty=float32 span=354_Conv_14_QuantizeLinear.354_scale:0:0 */, 0 /* ty=int32 span=354_Conv_14_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=354_Conv_14_QuantizeLinear:0:0 */;
  %51 = qnn.dequantize(%27, 0.0385724f /* ty=float32 span=346_Conv_6_QuantizeLinear.346_scale:0:0 */, 0 /* ty=int32 span=346_Concat_17_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=346_Concat_17_DequantizeLinear:0:0 */;
  %52 = qnn.dequantize(%50, 0.0246652f /* ty=float32 span=354_Conv_14_QuantizeLinear.354_scale:0:0 */, 0 /* ty=int32 span=354_Concat_17_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=354_Concat_17_DequantizeLinear:0:0 */;
  %53 = (%51, %52) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Concat_17_quant:0:0 */;
  %54 = concatenate(%53, axis=1) /* ty=Tensor[(1, 116, 28, 28), float32] span=Concat_17_quant:0:0 */;
  %55 = qnn.quantize(%54, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=356_Concat_17_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=356_Concat_17_QuantizeLinear:0:0 */;
  %56 = qnn.dequantize(%55, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=356_Reshape_19_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=356_Reshape_19_DequantizeLinear:0:0 */;
  %57 = reshape(%56, newshape=[1, 2, 58, 28, 28]) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=Reshape_19_quant:0:0 */;
  %58 = qnn.quantize(%57, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=358_Reshape_19_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), uint8] span=358_Reshape_19_QuantizeLinear:0:0 */;
  %59 = qnn.dequantize(%58, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=358_Transpose_20_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=358_Transpose_20_DequantizeLinear:0:0 */;
  %60 = transpose(%59, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=Transpose_20_quant:0:0 */;
  %61 = qnn.quantize(%60, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=359_Transpose_20_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), uint8] span=359_Transpose_20_QuantizeLinear:0:0 */;
  %62 = qnn.dequantize(%61, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=359_Reshape_22_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=359_Reshape_22_DequantizeLinear:0:0 */;
  %63 = reshape(%62, newshape=[1, -1, 28, 28]) /* ty=Tensor[(1, 116, 28, 28), float32] span=Reshape_22_quant:0:0 */;
  %64 = qnn.quantize(%63, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=361_Reshape_22_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=361_Reshape_22_QuantizeLinear:0:0 */;
  %65 = qnn.dequantize(%64, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=361_Split_23_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=361_Split_23_DequantizeLinear:0:0 */;
  %66 = split(%65, indices_or_sections=[58], axis=1) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Split_23_quant:0:0 */;
  %67 = %66.0 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %68 = qnn.quantize(%67, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=362_Split_23_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=362_Split_23_QuantizeLinear:0:0 */;
  %69 = %66.1 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %70 = qnn.quantize(%69, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=363_Split_23_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=363_Split_23_QuantizeLinear:0:0 */;
  %71 = qnn.dequantize(%70, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=363_Conv_24_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=363_Conv_24_DequantizeLinear:0:0 */;
  %72 = qnn.dequantize(meta[relay.Constant][24] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.0.weight_quantized:0:0 */, 0.00625523f /* ty=float32 span=ConvBnFusion_W_stage2.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.1.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.1.branch2.0.weight_DequantizeLinear:0:0 */;
  %73 = qnn.dequantize(meta[relay.Constant][25] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][26] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.1.bias_scale:0:0 */, meta[relay.Constant][27] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.1.bias_DequantizeLinear:0:0 */;
  %74 = expand_dims(%73, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %75 = nn.conv2d(%71, %72, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_24_quant:0:0 */;
  %76 = expand_dims(%74, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %77 = add(%75, %76) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %78 = qnn.quantize(%77, 0.0111231f /* ty=float32 span=365_Conv_24_QuantizeLinear.365_scale:0:0 */, 0 /* ty=int32 span=365_Conv_24_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=365_Conv_24_QuantizeLinear:0:0 */;
  %79 = qnn.dequantize(%78, 0.0111231f /* ty=float32 span=365_Conv_24_QuantizeLinear.365_scale:0:0 */, 0 /* ty=int32 span=365_Conv_27_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=365_Conv_27_DequantizeLinear:0:0 */;
  %80 = qnn.dequantize(meta[relay.Constant][28] /* ty=Tensor[(58, 1, 3, 3), int8] span=ConvBnFusion_W_stage2.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.3.weight_quantized:0:0 */, 0.0559938f /* ty=float32 span=ConvBnFusion_W_stage2.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.1.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 1, 3, 3), float32] span=ConvBnFusion_W_stage2.1.branch2.3.weight_DequantizeLinear:0:0 */;
  %81 = qnn.dequantize(meta[relay.Constant][29] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][30] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.4.bias_scale:0:0 */, meta[relay.Constant][31] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.4.bias_DequantizeLinear:0:0 */;
  %82 = expand_dims(%81, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %83 = nn.conv2d(%79, %80, padding=[1, 1, 1, 1], groups=58, channels=58, kernel_size=[3, 3]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_27_quant:0:0 */;
  %84 = expand_dims(%82, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %85 = add(%83, %84) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %86 = qnn.quantize(%85, 0.0376525f /* ty=float32 span=368_Conv_27_QuantizeLinear.368_scale:0:0 */, 126 /* ty=int32 span=368_Conv_27_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=368_Conv_27_QuantizeLinear:0:0 */;
  %87 = qnn.dequantize(%86, 0.0376525f /* ty=float32 span=368_Conv_27_QuantizeLinear.368_scale:0:0 */, 126 /* ty=int32 span=368_Conv_29_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=368_Conv_29_DequantizeLinear:0:0 */;
  %88 = qnn.dequantize(meta[relay.Constant][32] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.5.weight_quantized:0:0 */, 0.00476717f /* ty=float32 span=ConvBnFusion_W_stage2.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.1.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.1.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.1.branch2.5.weight_DequantizeLinear:0:0 */;
  %89 = qnn.dequantize(meta[relay.Constant][33] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][34] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.1.branch2.6.bias_scale:0:0 */, meta[relay.Constant][35] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.1.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.1.branch2.6.bias_DequantizeLinear:0:0 */;
  %90 = expand_dims(%89, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %91 = nn.conv2d(%87, %88, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_29_quant:0:0 */;
  %92 = expand_dims(%90, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %93 = add(%91, %92) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %94 = qnn.quantize(%93, 0.0175771f /* ty=float32 span=370_Conv_29_QuantizeLinear.370_scale:0:0 */, 0 /* ty=int32 span=370_Conv_29_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=370_Conv_29_QuantizeLinear:0:0 */;
  %95 = qnn.dequantize(%68, 0.0385724f /* ty=float32 span=356_Concat_17_QuantizeLinear.356_scale:0:0 */, 0 /* ty=int32 span=362_Concat_32_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=362_Concat_32_DequantizeLinear:0:0 */;
  %96 = qnn.dequantize(%94, 0.0175771f /* ty=float32 span=370_Conv_29_QuantizeLinear.370_scale:0:0 */, 0 /* ty=int32 span=370_Concat_32_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=370_Concat_32_DequantizeLinear:0:0 */;
  %97 = (%95, %96) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Concat_32_quant:0:0 */;
  %98 = concatenate(%97, axis=1) /* ty=Tensor[(1, 116, 28, 28), float32] span=Concat_32_quant:0:0 */;
  %99 = qnn.quantize(%98, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=372_Concat_32_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=372_Concat_32_QuantizeLinear:0:0 */;
  %100 = qnn.dequantize(%99, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=372_Reshape_34_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=372_Reshape_34_DequantizeLinear:0:0 */;
  %101 = reshape(%100, newshape=[1, 2, 58, 28, 28]) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=Reshape_34_quant:0:0 */;
  %102 = qnn.quantize(%101, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=374_Reshape_34_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), uint8] span=374_Reshape_34_QuantizeLinear:0:0 */;
  %103 = qnn.dequantize(%102, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=374_Transpose_35_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=374_Transpose_35_DequantizeLinear:0:0 */;
  %104 = transpose(%103, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=Transpose_35_quant:0:0 */;
  %105 = qnn.quantize(%104, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=375_Transpose_35_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), uint8] span=375_Transpose_35_QuantizeLinear:0:0 */;
  %106 = qnn.dequantize(%105, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=375_Reshape_37_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=375_Reshape_37_DequantizeLinear:0:0 */;
  %107 = reshape(%106, newshape=[1, -1, 28, 28]) /* ty=Tensor[(1, 116, 28, 28), float32] span=Reshape_37_quant:0:0 */;
  %108 = qnn.quantize(%107, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=377_Reshape_37_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=377_Reshape_37_QuantizeLinear:0:0 */;
  %109 = qnn.dequantize(%108, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=377_Split_38_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=377_Split_38_DequantizeLinear:0:0 */;
  %110 = split(%109, indices_or_sections=[58], axis=1) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Split_38_quant:0:0 */;
  %111 = %110.0 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %112 = qnn.quantize(%111, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=378_Split_38_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=378_Split_38_QuantizeLinear:0:0 */;
  %113 = %110.1 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %114 = qnn.quantize(%113, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=379_Split_38_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=379_Split_38_QuantizeLinear:0:0 */;
  %115 = qnn.dequantize(%114, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=379_Conv_39_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=379_Conv_39_DequantizeLinear:0:0 */;
  %116 = qnn.dequantize(meta[relay.Constant][36] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.0.weight_quantized:0:0 */, 0.00672964f /* ty=float32 span=ConvBnFusion_W_stage2.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.2.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.2.branch2.0.weight_DequantizeLinear:0:0 */;
  %117 = qnn.dequantize(meta[relay.Constant][37] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][38] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.1.bias_scale:0:0 */, meta[relay.Constant][39] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.1.bias_DequantizeLinear:0:0 */;
  %118 = expand_dims(%117, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %119 = nn.conv2d(%115, %116, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_39_quant:0:0 */;
  %120 = expand_dims(%118, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %121 = add(%119, %120) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %122 = qnn.quantize(%121, 0.0130238f /* ty=float32 span=381_Conv_39_QuantizeLinear.381_scale:0:0 */, 0 /* ty=int32 span=381_Conv_39_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=381_Conv_39_QuantizeLinear:0:0 */;
  %123 = qnn.dequantize(%122, 0.0130238f /* ty=float32 span=381_Conv_39_QuantizeLinear.381_scale:0:0 */, 0 /* ty=int32 span=381_Conv_42_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=381_Conv_42_DequantizeLinear:0:0 */;
  %124 = qnn.dequantize(meta[relay.Constant][40] /* ty=Tensor[(58, 1, 3, 3), int8] span=ConvBnFusion_W_stage2.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.3.weight_quantized:0:0 */, 0.0288551f /* ty=float32 span=ConvBnFusion_W_stage2.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.2.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 1, 3, 3), float32] span=ConvBnFusion_W_stage2.2.branch2.3.weight_DequantizeLinear:0:0 */;
  %125 = qnn.dequantize(meta[relay.Constant][41] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][42] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.4.bias_scale:0:0 */, meta[relay.Constant][43] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.4.bias_DequantizeLinear:0:0 */;
  %126 = expand_dims(%125, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %127 = nn.conv2d(%123, %124, padding=[1, 1, 1, 1], groups=58, channels=58, kernel_size=[3, 3]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_42_quant:0:0 */;
  %128 = expand_dims(%126, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %129 = add(%127, %128) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %130 = qnn.quantize(%129, 0.0422832f /* ty=float32 span=384_Conv_42_QuantizeLinear.384_scale:0:0 */, 127 /* ty=int32 span=384_Conv_42_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=384_Conv_42_QuantizeLinear:0:0 */;
  %131 = qnn.dequantize(%130, 0.0422832f /* ty=float32 span=384_Conv_42_QuantizeLinear.384_scale:0:0 */, 127 /* ty=int32 span=384_Conv_44_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=384_Conv_44_DequantizeLinear:0:0 */;
  %132 = qnn.dequantize(meta[relay.Constant][44] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.5.weight_quantized:0:0 */, 0.00632175f /* ty=float32 span=ConvBnFusion_W_stage2.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.2.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.2.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.2.branch2.5.weight_DequantizeLinear:0:0 */;
  %133 = qnn.dequantize(meta[relay.Constant][45] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][46] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.2.branch2.6.bias_scale:0:0 */, meta[relay.Constant][47] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.2.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.2.branch2.6.bias_DequantizeLinear:0:0 */;
  %134 = expand_dims(%133, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %135 = nn.conv2d(%131, %132, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_44_quant:0:0 */;
  %136 = expand_dims(%134, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %137 = add(%135, %136) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %138 = qnn.quantize(%137, 0.0171351f /* ty=float32 span=386_Conv_44_QuantizeLinear.386_scale:0:0 */, 0 /* ty=int32 span=386_Conv_44_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=386_Conv_44_QuantizeLinear:0:0 */;
  %139 = qnn.dequantize(%112, 0.0385724f /* ty=float32 span=372_Concat_32_QuantizeLinear.372_scale:0:0 */, 0 /* ty=int32 span=378_Concat_47_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=378_Concat_47_DequantizeLinear:0:0 */;
  %140 = qnn.dequantize(%138, 0.0171351f /* ty=float32 span=386_Conv_44_QuantizeLinear.386_scale:0:0 */, 0 /* ty=int32 span=386_Concat_47_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=386_Concat_47_DequantizeLinear:0:0 */;
  %141 = (%139, %140) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Concat_47_quant:0:0 */;
  %142 = concatenate(%141, axis=1) /* ty=Tensor[(1, 116, 28, 28), float32] span=Concat_47_quant:0:0 */;
  %143 = qnn.quantize(%142, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=388_Concat_47_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=388_Concat_47_QuantizeLinear:0:0 */;
  %144 = qnn.dequantize(%143, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=388_Reshape_49_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=388_Reshape_49_DequantizeLinear:0:0 */;
  %145 = reshape(%144, newshape=[1, 2, 58, 28, 28]) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=Reshape_49_quant:0:0 */;
  %146 = qnn.quantize(%145, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=390_Reshape_49_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), uint8] span=390_Reshape_49_QuantizeLinear:0:0 */;
  %147 = qnn.dequantize(%146, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=390_Transpose_50_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=390_Transpose_50_DequantizeLinear:0:0 */;
  %148 = transpose(%147, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=Transpose_50_quant:0:0 */;
  %149 = qnn.quantize(%148, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=391_Transpose_50_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), uint8] span=391_Transpose_50_QuantizeLinear:0:0 */;
  %150 = qnn.dequantize(%149, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=391_Reshape_52_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=391_Reshape_52_DequantizeLinear:0:0 */;
  %151 = reshape(%150, newshape=[1, -1, 28, 28]) /* ty=Tensor[(1, 116, 28, 28), float32] span=Reshape_52_quant:0:0 */;
  %152 = qnn.quantize(%151, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=393_Reshape_52_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=393_Reshape_52_QuantizeLinear:0:0 */;
  %153 = qnn.dequantize(%152, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=393_Split_53_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=393_Split_53_DequantizeLinear:0:0 */;
  %154 = split(%153, indices_or_sections=[58], axis=1) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Split_53_quant:0:0 */;
  %155 = %154.0 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %156 = qnn.quantize(%155, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=394_Split_53_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=394_Split_53_QuantizeLinear:0:0 */;
  %157 = %154.1 /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %158 = qnn.quantize(%157, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=395_Split_53_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=395_Split_53_QuantizeLinear:0:0 */;
  %159 = qnn.dequantize(%158, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=395_Conv_54_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=395_Conv_54_DequantizeLinear:0:0 */;
  %160 = qnn.dequantize(meta[relay.Constant][48] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.0.weight_quantized:0:0 */, 0.00784321f /* ty=float32 span=ConvBnFusion_W_stage2.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.3.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.3.branch2.0.weight_DequantizeLinear:0:0 */;
  %161 = qnn.dequantize(meta[relay.Constant][49] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][50] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.1.bias_scale:0:0 */, meta[relay.Constant][51] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.1.bias_DequantizeLinear:0:0 */;
  %162 = expand_dims(%161, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %163 = nn.conv2d(%159, %160, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_54_quant:0:0 */;
  %164 = expand_dims(%162, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %165 = add(%163, %164) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %166 = qnn.quantize(%165, 0.0176652f /* ty=float32 span=397_Conv_54_QuantizeLinear.397_scale:0:0 */, 0 /* ty=int32 span=397_Conv_54_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=397_Conv_54_QuantizeLinear:0:0 */;
  %167 = qnn.dequantize(%166, 0.0176652f /* ty=float32 span=397_Conv_54_QuantizeLinear.397_scale:0:0 */, 0 /* ty=int32 span=397_Conv_57_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=397_Conv_57_DequantizeLinear:0:0 */;
  %168 = qnn.dequantize(meta[relay.Constant][52] /* ty=Tensor[(58, 1, 3, 3), int8] span=ConvBnFusion_W_stage2.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.3.weight_quantized:0:0 */, 0.0410683f /* ty=float32 span=ConvBnFusion_W_stage2.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.3.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 1, 3, 3), float32] span=ConvBnFusion_W_stage2.3.branch2.3.weight_DequantizeLinear:0:0 */;
  %169 = qnn.dequantize(meta[relay.Constant][53] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][54] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.4.bias_scale:0:0 */, meta[relay.Constant][55] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.4.bias_DequantizeLinear:0:0 */;
  %170 = expand_dims(%169, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %171 = nn.conv2d(%167, %168, padding=[1, 1, 1, 1], groups=58, channels=58, kernel_size=[3, 3]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_57_quant:0:0 */;
  %172 = expand_dims(%170, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %173 = add(%171, %172) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %174 = qnn.quantize(%173, 0.0560246f /* ty=float32 span=400_Conv_57_QuantizeLinear.400_scale:0:0 */, 131 /* ty=int32 span=400_Conv_57_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=400_Conv_57_QuantizeLinear:0:0 */;
  %175 = qnn.dequantize(%174, 0.0560246f /* ty=float32 span=400_Conv_57_QuantizeLinear.400_scale:0:0 */, 131 /* ty=int32 span=400_Conv_59_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=400_Conv_59_DequantizeLinear:0:0 */;
  %176 = qnn.dequantize(meta[relay.Constant][56] /* ty=Tensor[(58, 58, 1, 1), int8] span=ConvBnFusion_W_stage2.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.5.weight_quantized:0:0 */, 0.00603677f /* ty=float32 span=ConvBnFusion_W_stage2.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage2.3.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage2.3.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58, 58, 1, 1), float32] span=ConvBnFusion_W_stage2.3.branch2.5.weight_DequantizeLinear:0:0 */;
  %177 = qnn.dequantize(meta[relay.Constant][57] /* ty=Tensor[(58), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][58] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage2.3.branch2.6.bias_scale:0:0 */, meta[relay.Constant][59] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage2.3.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(58), float32] span=ConvBnFusion_BN_B_stage2.3.branch2.6.bias_DequantizeLinear:0:0 */;
  %178 = expand_dims(%177, axis=1, num_newaxis=2) /* ty=Tensor[(58, 1, 1), float32] */;
  %179 = nn.conv2d(%175, %176, padding=[0, 0, 0, 0], channels=58, kernel_size=[1, 1]) /* ty=Tensor[(1, 58, 28, 28), float32] span=Conv_59_quant:0:0 */;
  %180 = expand_dims(%178, axis=0) /* ty=Tensor[(1, 58, 1, 1), float32] */;
  %181 = add(%179, %180) /* ty=Tensor[(1, 58, 28, 28), float32] */;
  %182 = qnn.quantize(%181, 0.0155579f /* ty=float32 span=402_Conv_59_QuantizeLinear.402_scale:0:0 */, 0 /* ty=int32 span=402_Conv_59_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 28, 28), uint8] span=402_Conv_59_QuantizeLinear:0:0 */;
  %183 = qnn.dequantize(%156, 0.0385724f /* ty=float32 span=388_Concat_47_QuantizeLinear.388_scale:0:0 */, 0 /* ty=int32 span=394_Concat_62_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=394_Concat_62_DequantizeLinear:0:0 */;
  %184 = qnn.dequantize(%182, 0.0155579f /* ty=float32 span=402_Conv_59_QuantizeLinear.402_scale:0:0 */, 0 /* ty=int32 span=402_Concat_62_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 28, 28), float32] span=402_Concat_62_DequantizeLinear:0:0 */;
  %185 = (%183, %184) /* ty=(Tensor[(1, 58, 28, 28), float32], Tensor[(1, 58, 28, 28), float32]) span=Concat_62_quant:0:0 */;
  %186 = concatenate(%185, axis=1) /* ty=Tensor[(1, 116, 28, 28), float32] span=Concat_62_quant:0:0 */;
  %187 = qnn.quantize(%186, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=404_Concat_62_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=404_Concat_62_QuantizeLinear:0:0 */;
  %188 = qnn.dequantize(%187, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=404_Reshape_64_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=404_Reshape_64_DequantizeLinear:0:0 */;
  %189 = reshape(%188, newshape=[1, 2, 58, 28, 28]) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=Reshape_64_quant:0:0 */;
  %190 = qnn.quantize(%189, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=406_Reshape_64_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), uint8] span=406_Reshape_64_QuantizeLinear:0:0 */;
  %191 = qnn.dequantize(%190, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=406_Transpose_65_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 58, 28, 28), float32] span=406_Transpose_65_DequantizeLinear:0:0 */;
  %192 = transpose(%191, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=Transpose_65_quant:0:0 */;
  %193 = qnn.quantize(%192, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=407_Transpose_65_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), uint8] span=407_Transpose_65_QuantizeLinear:0:0 */;
  %194 = qnn.dequantize(%193, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=407_Reshape_67_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 58, 2, 28, 28), float32] span=407_Reshape_67_DequantizeLinear:0:0 */;
  %195 = reshape(%194, newshape=[1, -1, 28, 28]) /* ty=Tensor[(1, 116, 28, 28), float32] span=Reshape_67_quant:0:0 */;
  %196 = qnn.quantize(%195, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=409_Reshape_67_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=409_Reshape_67_QuantizeLinear:0:0 */;
  %197 = qnn.dequantize(%196, 0.0246652f /* ty=float32 span=404_Concat_62_QuantizeLinear.404_scale:0:0 */, 0 /* ty=int32 span=409_Conv_73_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=409_Conv_73_DequantizeLinear:0:0 */;
  %198 = qnn.dequantize(meta[relay.Constant][60] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch1.0.weight_quantized:0:0 */, 0.00931095f /* ty=float32 span=ConvBnFusion_W_stage3.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch1.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.0.branch1.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.0.branch1.0.weight_DequantizeLinear:0:0 */;
  %199 = qnn.dequantize(meta[relay.Constant][61] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch1.1.bias_quantized:0:0 */, meta[relay.Constant][62] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch1.1.bias_scale:0:0 */, meta[relay.Constant][63] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.0.branch1.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.0.branch1.1.bias_DequantizeLinear:0:0 */;
  %200 = expand_dims(%199, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %201 = nn.conv2d(%197, %198, strides=[2, 2], padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_68_quant:0:0 */;
  %202 = expand_dims(%200, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %203 = add(%201, %202) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %204 = qnn.quantize(%203, 0.0525923f /* ty=float32 span=411_Conv_68_QuantizeLinear.411_scale:0:0 */, 112 /* ty=int32 span=411_Conv_68_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=411_Conv_68_QuantizeLinear:0:0 */;
  %205 = qnn.dequantize(%204, 0.0525923f /* ty=float32 span=411_Conv_68_QuantizeLinear.411_scale:0:0 */, 112 /* ty=int32 span=411_Conv_70_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=411_Conv_70_DequantizeLinear:0:0 */;
  %206 = qnn.dequantize(meta[relay.Constant][64] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch1.2.weight_quantized:0:0 */, 0.00521419f /* ty=float32 span=ConvBnFusion_W_stage3.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch1.2.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.0.branch1.2.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.0.branch1.2.weight_DequantizeLinear:0:0 */;
  %207 = qnn.dequantize(meta[relay.Constant][65] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch1.3.bias_quantized:0:0 */, meta[relay.Constant][66] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch1.3.bias_scale:0:0 */, meta[relay.Constant][67] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.0.branch1.3.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.0.branch1.3.bias_DequantizeLinear:0:0 */;
  %208 = expand_dims(%207, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %209 = nn.conv2d(%205, %206, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_70_quant:0:0 */;
  %210 = expand_dims(%208, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %211 = add(%209, %210) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %212 = qnn.quantize(%211, 0.0106579f /* ty=float32 span=413_Conv_70_QuantizeLinear.413_scale:0:0 */, 0 /* ty=int32 span=413_Conv_70_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=413_Conv_70_QuantizeLinear:0:0 */;
  %213 = qnn.dequantize(meta[relay.Constant][68] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.0.weight_quantized:0:0 */, 0.00620568f /* ty=float32 span=ConvBnFusion_W_stage3.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.0.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.0.branch2.0.weight_DequantizeLinear:0:0 */;
  %214 = qnn.dequantize(meta[relay.Constant][69] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][70] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.1.bias_scale:0:0 */, meta[relay.Constant][71] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.1.bias_DequantizeLinear:0:0 */;
  %215 = expand_dims(%214, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %216 = nn.conv2d(%197, %213, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 28, 28), float32] span=Conv_73_quant:0:0 */;
  %217 = expand_dims(%215, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %218 = add(%216, %217) /* ty=Tensor[(1, 116, 28, 28), float32] */;
  %219 = qnn.quantize(%218, 0.0116608f /* ty=float32 span=416_Conv_73_QuantizeLinear.416_scale:0:0 */, 0 /* ty=int32 span=416_Conv_73_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 28, 28), uint8] span=416_Conv_73_QuantizeLinear:0:0 */;
  %220 = qnn.dequantize(%219, 0.0116608f /* ty=float32 span=416_Conv_73_QuantizeLinear.416_scale:0:0 */, 0 /* ty=int32 span=416_Conv_76_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 28, 28), float32] span=416_Conv_76_DequantizeLinear:0:0 */;
  %221 = qnn.dequantize(meta[relay.Constant][72] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.3.weight_quantized:0:0 */, 0.707725f /* ty=float32 span=ConvBnFusion_W_stage3.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.0.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.0.branch2.3.weight_DequantizeLinear:0:0 */;
  %222 = qnn.dequantize(meta[relay.Constant][73] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][74] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.4.bias_scale:0:0 */, meta[relay.Constant][75] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.4.bias_DequantizeLinear:0:0 */;
  %223 = expand_dims(%222, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %224 = nn.conv2d(%220, %221, strides=[2, 2], padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_76_quant:0:0 */;
  %225 = expand_dims(%223, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %226 = add(%224, %225) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %227 = qnn.quantize(%226, 0.0374552f /* ty=float32 span=419_Conv_76_QuantizeLinear.419_scale:0:0 */, 133 /* ty=int32 span=419_Conv_76_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=419_Conv_76_QuantizeLinear:0:0 */;
  %228 = qnn.dequantize(%227, 0.0374552f /* ty=float32 span=419_Conv_76_QuantizeLinear.419_scale:0:0 */, 133 /* ty=int32 span=419_Conv_78_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=419_Conv_78_DequantizeLinear:0:0 */;
  %229 = qnn.dequantize(meta[relay.Constant][76] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.5.weight_quantized:0:0 */, 0.00486147f /* ty=float32 span=ConvBnFusion_W_stage3.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.0.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.0.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.0.branch2.5.weight_DequantizeLinear:0:0 */;
  %230 = qnn.dequantize(meta[relay.Constant][77] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][78] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.0.branch2.6.bias_scale:0:0 */, meta[relay.Constant][79] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.0.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.0.branch2.6.bias_DequantizeLinear:0:0 */;
  %231 = expand_dims(%230, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %232 = nn.conv2d(%228, %229, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_78_quant:0:0 */;
  %233 = expand_dims(%231, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %234 = add(%232, %233) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %235 = qnn.quantize(%234, 0.0129049f /* ty=float32 span=421_Conv_78_QuantizeLinear.421_scale:0:0 */, 0 /* ty=int32 span=421_Conv_78_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=421_Conv_78_QuantizeLinear:0:0 */;
  %236 = qnn.dequantize(%212, 0.0106579f /* ty=float32 span=413_Conv_70_QuantizeLinear.413_scale:0:0 */, 0 /* ty=int32 span=413_Concat_81_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=413_Concat_81_DequantizeLinear:0:0 */;
  %237 = qnn.dequantize(%235, 0.0129049f /* ty=float32 span=421_Conv_78_QuantizeLinear.421_scale:0:0 */, 0 /* ty=int32 span=421_Concat_81_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=421_Concat_81_DequantizeLinear:0:0 */;
  %238 = (%236, %237) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_81_quant:0:0 */;
  %239 = concatenate(%238, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_81_quant:0:0 */;
  %240 = qnn.quantize(%239, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=423_Concat_81_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=423_Concat_81_QuantizeLinear:0:0 */;
  %241 = qnn.dequantize(%240, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=423_Reshape_83_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=423_Reshape_83_DequantizeLinear:0:0 */;
  %242 = reshape(%241, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_83_quant:0:0 */;
  %243 = qnn.quantize(%242, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=425_Reshape_83_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=425_Reshape_83_QuantizeLinear:0:0 */;
  %244 = qnn.dequantize(%243, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=425_Transpose_84_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=425_Transpose_84_DequantizeLinear:0:0 */;
  %245 = transpose(%244, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_84_quant:0:0 */;
  %246 = qnn.quantize(%245, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=426_Transpose_84_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=426_Transpose_84_QuantizeLinear:0:0 */;
  %247 = qnn.dequantize(%246, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=426_Reshape_86_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=426_Reshape_86_DequantizeLinear:0:0 */;
  %248 = reshape(%247, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_86_quant:0:0 */;
  %249 = qnn.quantize(%248, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=428_Reshape_86_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=428_Reshape_86_QuantizeLinear:0:0 */;
  %250 = qnn.dequantize(%249, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=428_Split_87_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=428_Split_87_DequantizeLinear:0:0 */;
  %251 = split(%250, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_87_quant:0:0 */;
  %252 = %251.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %253 = qnn.quantize(%252, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=429_Split_87_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=429_Split_87_QuantizeLinear:0:0 */;
  %254 = %251.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %255 = qnn.quantize(%254, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=430_Split_87_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=430_Split_87_QuantizeLinear:0:0 */;
  %256 = qnn.dequantize(%255, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=430_Conv_88_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=430_Conv_88_DequantizeLinear:0:0 */;
  %257 = qnn.dequantize(meta[relay.Constant][80] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.0.weight_quantized:0:0 */, 0.00720324f /* ty=float32 span=ConvBnFusion_W_stage3.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.1.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.1.branch2.0.weight_DequantizeLinear:0:0 */;
  %258 = qnn.dequantize(meta[relay.Constant][81] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][82] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.1.bias_scale:0:0 */, meta[relay.Constant][83] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.1.bias_DequantizeLinear:0:0 */;
  %259 = expand_dims(%258, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %260 = nn.conv2d(%256, %257, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_88_quant:0:0 */;
  %261 = expand_dims(%259, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %262 = add(%260, %261) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %263 = qnn.quantize(%262, 0.00792939f /* ty=float32 span=432_Conv_88_QuantizeLinear.432_scale:0:0 */, 0 /* ty=int32 span=432_Conv_88_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=432_Conv_88_QuantizeLinear:0:0 */;
  %264 = qnn.dequantize(%263, 0.00792939f /* ty=float32 span=432_Conv_88_QuantizeLinear.432_scale:0:0 */, 0 /* ty=int32 span=432_Conv_91_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=432_Conv_91_DequantizeLinear:0:0 */;
  %265 = qnn.dequantize(meta[relay.Constant][84] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.3.weight_quantized:0:0 */, 0.31803f /* ty=float32 span=ConvBnFusion_W_stage3.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.1.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.1.branch2.3.weight_DequantizeLinear:0:0 */;
  %266 = qnn.dequantize(meta[relay.Constant][85] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][86] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.4.bias_scale:0:0 */, meta[relay.Constant][87] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.4.bias_DequantizeLinear:0:0 */;
  %267 = expand_dims(%266, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %268 = nn.conv2d(%264, %265, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_91_quant:0:0 */;
  %269 = expand_dims(%267, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %270 = add(%268, %269) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %271 = qnn.quantize(%270, 0.0265286f /* ty=float32 span=435_Conv_91_QuantizeLinear.435_scale:0:0 */, 140 /* ty=int32 span=435_Conv_91_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=435_Conv_91_QuantizeLinear:0:0 */;
  %272 = qnn.dequantize(%271, 0.0265286f /* ty=float32 span=435_Conv_91_QuantizeLinear.435_scale:0:0 */, 140 /* ty=int32 span=435_Conv_93_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=435_Conv_93_DequantizeLinear:0:0 */;
  %273 = qnn.dequantize(meta[relay.Constant][88] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.5.weight_quantized:0:0 */, 0.0116991f /* ty=float32 span=ConvBnFusion_W_stage3.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.1.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.1.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.1.branch2.5.weight_DequantizeLinear:0:0 */;
  %274 = qnn.dequantize(meta[relay.Constant][89] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][90] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.1.branch2.6.bias_scale:0:0 */, meta[relay.Constant][91] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.1.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.1.branch2.6.bias_DequantizeLinear:0:0 */;
  %275 = expand_dims(%274, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %276 = nn.conv2d(%272, %273, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_93_quant:0:0 */;
  %277 = expand_dims(%275, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %278 = add(%276, %277) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %279 = qnn.quantize(%278, 0.0108703f /* ty=float32 span=437_Conv_93_QuantizeLinear.437_scale:0:0 */, 0 /* ty=int32 span=437_Conv_93_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=437_Conv_93_QuantizeLinear:0:0 */;
  %280 = qnn.dequantize(%253, 0.0129049f /* ty=float32 span=423_Concat_81_QuantizeLinear.423_scale:0:0 */, 0 /* ty=int32 span=429_Concat_96_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=429_Concat_96_DequantizeLinear:0:0 */;
  %281 = qnn.dequantize(%279, 0.0108703f /* ty=float32 span=437_Conv_93_QuantizeLinear.437_scale:0:0 */, 0 /* ty=int32 span=437_Concat_96_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=437_Concat_96_DequantizeLinear:0:0 */;
  %282 = (%280, %281) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_96_quant:0:0 */;
  %283 = concatenate(%282, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_96_quant:0:0 */;
  %284 = qnn.quantize(%283, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=439_Concat_96_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=439_Concat_96_QuantizeLinear:0:0 */;
  %285 = qnn.dequantize(%284, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=439_Reshape_98_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=439_Reshape_98_DequantizeLinear:0:0 */;
  %286 = reshape(%285, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_98_quant:0:0 */;
  %287 = qnn.quantize(%286, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=441_Reshape_98_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=441_Reshape_98_QuantizeLinear:0:0 */;
  %288 = qnn.dequantize(%287, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=441_Transpose_99_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=441_Transpose_99_DequantizeLinear:0:0 */;
  %289 = transpose(%288, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_99_quant:0:0 */;
  %290 = qnn.quantize(%289, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=442_Transpose_99_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=442_Transpose_99_QuantizeLinear:0:0 */;
  %291 = qnn.dequantize(%290, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=442_Reshape_101_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=442_Reshape_101_DequantizeLinear:0:0 */;
  %292 = reshape(%291, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_101_quant:0:0 */;
  %293 = qnn.quantize(%292, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=444_Reshape_101_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=444_Reshape_101_QuantizeLinear:0:0 */;
  %294 = qnn.dequantize(%293, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=444_Split_102_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=444_Split_102_DequantizeLinear:0:0 */;
  %295 = split(%294, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_102_quant:0:0 */;
  %296 = %295.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %297 = qnn.quantize(%296, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=445_Split_102_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=445_Split_102_QuantizeLinear:0:0 */;
  %298 = %295.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %299 = qnn.quantize(%298, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=446_Split_102_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=446_Split_102_QuantizeLinear:0:0 */;
  %300 = qnn.dequantize(%299, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=446_Conv_103_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=446_Conv_103_DequantizeLinear:0:0 */;
  %301 = qnn.dequantize(meta[relay.Constant][92] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.0.weight_quantized:0:0 */, 0.00533227f /* ty=float32 span=ConvBnFusion_W_stage3.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.2.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.2.branch2.0.weight_DequantizeLinear:0:0 */;
  %302 = qnn.dequantize(meta[relay.Constant][93] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][94] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.1.bias_scale:0:0 */, meta[relay.Constant][95] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.1.bias_DequantizeLinear:0:0 */;
  %303 = expand_dims(%302, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %304 = nn.conv2d(%300, %301, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_103_quant:0:0 */;
  %305 = expand_dims(%303, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %306 = add(%304, %305) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %307 = qnn.quantize(%306, 0.00731589f /* ty=float32 span=448_Conv_103_QuantizeLinear.448_scale:0:0 */, 0 /* ty=int32 span=448_Conv_103_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=448_Conv_103_QuantizeLinear:0:0 */;
  %308 = qnn.dequantize(%307, 0.00731589f /* ty=float32 span=448_Conv_103_QuantizeLinear.448_scale:0:0 */, 0 /* ty=int32 span=448_Conv_106_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=448_Conv_106_DequantizeLinear:0:0 */;
  %309 = qnn.dequantize(meta[relay.Constant][96] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.3.weight_quantized:0:0 */, 0.0594989f /* ty=float32 span=ConvBnFusion_W_stage3.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.2.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.2.branch2.3.weight_DequantizeLinear:0:0 */;
  %310 = qnn.dequantize(meta[relay.Constant][97] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][98] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.4.bias_scale:0:0 */, meta[relay.Constant][99] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.4.bias_DequantizeLinear:0:0 */;
  %311 = expand_dims(%310, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %312 = nn.conv2d(%308, %309, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_106_quant:0:0 */;
  %313 = expand_dims(%311, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %314 = add(%312, %313) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %315 = qnn.quantize(%314, 0.0271302f /* ty=float32 span=451_Conv_106_QuantizeLinear.451_scale:0:0 */, 123 /* ty=int32 span=451_Conv_106_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=451_Conv_106_QuantizeLinear:0:0 */;
  %316 = qnn.dequantize(%315, 0.0271302f /* ty=float32 span=451_Conv_106_QuantizeLinear.451_scale:0:0 */, 123 /* ty=int32 span=451_Conv_108_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=451_Conv_108_DequantizeLinear:0:0 */;
  %317 = qnn.dequantize(meta[relay.Constant][100] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.5.weight_quantized:0:0 */, 0.00662668f /* ty=float32 span=ConvBnFusion_W_stage3.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.2.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.2.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.2.branch2.5.weight_DequantizeLinear:0:0 */;
  %318 = qnn.dequantize(meta[relay.Constant][101] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][102] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.2.branch2.6.bias_scale:0:0 */, meta[relay.Constant][103] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.2.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.2.branch2.6.bias_DequantizeLinear:0:0 */;
  %319 = expand_dims(%318, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %320 = nn.conv2d(%316, %317, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_108_quant:0:0 */;
  %321 = expand_dims(%319, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %322 = add(%320, %321) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %323 = qnn.quantize(%322, 0.0110011f /* ty=float32 span=453_Conv_108_QuantizeLinear.453_scale:0:0 */, 0 /* ty=int32 span=453_Conv_108_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=453_Conv_108_QuantizeLinear:0:0 */;
  %324 = qnn.dequantize(%297, 0.0129049f /* ty=float32 span=439_Concat_96_QuantizeLinear.439_scale:0:0 */, 0 /* ty=int32 span=445_Concat_111_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=445_Concat_111_DequantizeLinear:0:0 */;
  %325 = qnn.dequantize(%323, 0.0110011f /* ty=float32 span=453_Conv_108_QuantizeLinear.453_scale:0:0 */, 0 /* ty=int32 span=453_Concat_111_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=453_Concat_111_DequantizeLinear:0:0 */;
  %326 = (%324, %325) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_111_quant:0:0 */;
  %327 = concatenate(%326, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_111_quant:0:0 */;
  %328 = qnn.quantize(%327, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=455_Concat_111_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=455_Concat_111_QuantizeLinear:0:0 */;
  %329 = qnn.dequantize(%328, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=455_Reshape_113_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=455_Reshape_113_DequantizeLinear:0:0 */;
  %330 = reshape(%329, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_113_quant:0:0 */;
  %331 = qnn.quantize(%330, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=457_Reshape_113_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=457_Reshape_113_QuantizeLinear:0:0 */;
  %332 = qnn.dequantize(%331, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=457_Transpose_114_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=457_Transpose_114_DequantizeLinear:0:0 */;
  %333 = transpose(%332, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_114_quant:0:0 */;
  %334 = qnn.quantize(%333, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=458_Transpose_114_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=458_Transpose_114_QuantizeLinear:0:0 */;
  %335 = qnn.dequantize(%334, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=458_Reshape_116_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=458_Reshape_116_DequantizeLinear:0:0 */;
  %336 = reshape(%335, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_116_quant:0:0 */;
  %337 = qnn.quantize(%336, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=460_Reshape_116_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=460_Reshape_116_QuantizeLinear:0:0 */;
  %338 = qnn.dequantize(%337, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=460_Split_117_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=460_Split_117_DequantizeLinear:0:0 */;
  %339 = split(%338, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_117_quant:0:0 */;
  %340 = %339.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %341 = qnn.quantize(%340, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=461_Split_117_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=461_Split_117_QuantizeLinear:0:0 */;
  %342 = %339.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %343 = qnn.quantize(%342, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=462_Split_117_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=462_Split_117_QuantizeLinear:0:0 */;
  %344 = qnn.dequantize(%343, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=462_Conv_118_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=462_Conv_118_DequantizeLinear:0:0 */;
  %345 = qnn.dequantize(meta[relay.Constant][104] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.0.weight_quantized:0:0 */, 0.00611616f /* ty=float32 span=ConvBnFusion_W_stage3.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.3.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.3.branch2.0.weight_DequantizeLinear:0:0 */;
  %346 = qnn.dequantize(meta[relay.Constant][105] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][106] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.1.bias_scale:0:0 */, meta[relay.Constant][107] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.1.bias_DequantizeLinear:0:0 */;
  %347 = expand_dims(%346, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %348 = nn.conv2d(%344, %345, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_118_quant:0:0 */;
  %349 = expand_dims(%347, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %350 = add(%348, %349) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %351 = qnn.quantize(%350, 0.0104026f /* ty=float32 span=464_Conv_118_QuantizeLinear.464_scale:0:0 */, 0 /* ty=int32 span=464_Conv_118_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=464_Conv_118_QuantizeLinear:0:0 */;
  %352 = qnn.dequantize(%351, 0.0104026f /* ty=float32 span=464_Conv_118_QuantizeLinear.464_scale:0:0 */, 0 /* ty=int32 span=464_Conv_121_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=464_Conv_121_DequantizeLinear:0:0 */;
  %353 = qnn.dequantize(meta[relay.Constant][108] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.3.weight_quantized:0:0 */, 0.334726f /* ty=float32 span=ConvBnFusion_W_stage3.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.3.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.3.branch2.3.weight_DequantizeLinear:0:0 */;
  %354 = qnn.dequantize(meta[relay.Constant][109] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][110] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.4.bias_scale:0:0 */, meta[relay.Constant][111] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.4.bias_DequantizeLinear:0:0 */;
  %355 = expand_dims(%354, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %356 = nn.conv2d(%352, %353, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_121_quant:0:0 */;
  %357 = expand_dims(%355, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %358 = add(%356, %357) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %359 = qnn.quantize(%358, 0.0366143f /* ty=float32 span=467_Conv_121_QuantizeLinear.467_scale:0:0 */, 124 /* ty=int32 span=467_Conv_121_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=467_Conv_121_QuantizeLinear:0:0 */;
  %360 = qnn.dequantize(%359, 0.0366143f /* ty=float32 span=467_Conv_121_QuantizeLinear.467_scale:0:0 */, 124 /* ty=int32 span=467_Conv_123_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=467_Conv_123_DequantizeLinear:0:0 */;
  %361 = qnn.dequantize(meta[relay.Constant][112] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.5.weight_quantized:0:0 */, 0.00448762f /* ty=float32 span=ConvBnFusion_W_stage3.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.3.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.3.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.3.branch2.5.weight_DequantizeLinear:0:0 */;
  %362 = qnn.dequantize(meta[relay.Constant][113] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][114] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.3.branch2.6.bias_scale:0:0 */, meta[relay.Constant][115] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.3.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.3.branch2.6.bias_DequantizeLinear:0:0 */;
  %363 = expand_dims(%362, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %364 = nn.conv2d(%360, %361, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_123_quant:0:0 */;
  %365 = expand_dims(%363, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %366 = add(%364, %365) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %367 = qnn.quantize(%366, 0.0117823f /* ty=float32 span=469_Conv_123_QuantizeLinear.469_scale:0:0 */, 0 /* ty=int32 span=469_Conv_123_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=469_Conv_123_QuantizeLinear:0:0 */;
  %368 = qnn.dequantize(%341, 0.0129049f /* ty=float32 span=455_Concat_111_QuantizeLinear.455_scale:0:0 */, 0 /* ty=int32 span=461_Concat_126_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=461_Concat_126_DequantizeLinear:0:0 */;
  %369 = qnn.dequantize(%367, 0.0117823f /* ty=float32 span=469_Conv_123_QuantizeLinear.469_scale:0:0 */, 0 /* ty=int32 span=469_Concat_126_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=469_Concat_126_DequantizeLinear:0:0 */;
  %370 = (%368, %369) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_126_quant:0:0 */;
  %371 = concatenate(%370, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_126_quant:0:0 */;
  %372 = qnn.quantize(%371, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=471_Concat_126_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=471_Concat_126_QuantizeLinear:0:0 */;
  %373 = qnn.dequantize(%372, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=471_Reshape_128_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=471_Reshape_128_DequantizeLinear:0:0 */;
  %374 = reshape(%373, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_128_quant:0:0 */;
  %375 = qnn.quantize(%374, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=473_Reshape_128_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=473_Reshape_128_QuantizeLinear:0:0 */;
  %376 = qnn.dequantize(%375, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=473_Transpose_129_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=473_Transpose_129_DequantizeLinear:0:0 */;
  %377 = transpose(%376, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_129_quant:0:0 */;
  %378 = qnn.quantize(%377, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=474_Transpose_129_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=474_Transpose_129_QuantizeLinear:0:0 */;
  %379 = qnn.dequantize(%378, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=474_Reshape_131_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=474_Reshape_131_DequantizeLinear:0:0 */;
  %380 = reshape(%379, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_131_quant:0:0 */;
  %381 = qnn.quantize(%380, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=476_Reshape_131_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=476_Reshape_131_QuantizeLinear:0:0 */;
  %382 = qnn.dequantize(%381, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=476_Split_132_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=476_Split_132_DequantizeLinear:0:0 */;
  %383 = split(%382, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_132_quant:0:0 */;
  %384 = %383.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %385 = qnn.quantize(%384, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=477_Split_132_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=477_Split_132_QuantizeLinear:0:0 */;
  %386 = %383.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %387 = qnn.quantize(%386, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=478_Split_132_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=478_Split_132_QuantizeLinear:0:0 */;
  %388 = qnn.dequantize(%387, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=478_Conv_133_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=478_Conv_133_DequantizeLinear:0:0 */;
  %389 = qnn.dequantize(meta[relay.Constant][116] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.4.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.0.weight_quantized:0:0 */, 0.0088017f /* ty=float32 span=ConvBnFusion_W_stage3.4.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.4.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.4.branch2.0.weight_DequantizeLinear:0:0 */;
  %390 = qnn.dequantize(meta[relay.Constant][117] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][118] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.1.bias_scale:0:0 */, meta[relay.Constant][119] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.1.bias_DequantizeLinear:0:0 */;
  %391 = expand_dims(%390, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %392 = nn.conv2d(%388, %389, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_133_quant:0:0 */;
  %393 = expand_dims(%391, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %394 = add(%392, %393) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %395 = qnn.quantize(%394, 0.00855539f /* ty=float32 span=480_Conv_133_QuantizeLinear.480_scale:0:0 */, 0 /* ty=int32 span=480_Conv_133_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=480_Conv_133_QuantizeLinear:0:0 */;
  %396 = qnn.dequantize(%395, 0.00855539f /* ty=float32 span=480_Conv_133_QuantizeLinear.480_scale:0:0 */, 0 /* ty=int32 span=480_Conv_136_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=480_Conv_136_DequantizeLinear:0:0 */;
  %397 = qnn.dequantize(meta[relay.Constant][120] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.4.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.3.weight_quantized:0:0 */, 0.0736497f /* ty=float32 span=ConvBnFusion_W_stage3.4.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.4.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.4.branch2.3.weight_DequantizeLinear:0:0 */;
  %398 = qnn.dequantize(meta[relay.Constant][121] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][122] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.4.bias_scale:0:0 */, meta[relay.Constant][123] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.4.bias_DequantizeLinear:0:0 */;
  %399 = expand_dims(%398, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %400 = nn.conv2d(%396, %397, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_136_quant:0:0 */;
  %401 = expand_dims(%399, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %402 = add(%400, %401) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %403 = qnn.quantize(%402, 0.0293222f /* ty=float32 span=483_Conv_136_QuantizeLinear.483_scale:0:0 */, 114 /* ty=int32 span=483_Conv_136_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=483_Conv_136_QuantizeLinear:0:0 */;
  %404 = qnn.dequantize(%403, 0.0293222f /* ty=float32 span=483_Conv_136_QuantizeLinear.483_scale:0:0 */, 114 /* ty=int32 span=483_Conv_138_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=483_Conv_138_DequantizeLinear:0:0 */;
  %405 = qnn.dequantize(meta[relay.Constant][124] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.4.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.5.weight_quantized:0:0 */, 0.00505521f /* ty=float32 span=ConvBnFusion_W_stage3.4.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.4.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.4.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.4.branch2.5.weight_DequantizeLinear:0:0 */;
  %406 = qnn.dequantize(meta[relay.Constant][125] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][126] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.4.branch2.6.bias_scale:0:0 */, meta[relay.Constant][127] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.4.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.4.branch2.6.bias_DequantizeLinear:0:0 */;
  %407 = expand_dims(%406, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %408 = nn.conv2d(%404, %405, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_138_quant:0:0 */;
  %409 = expand_dims(%407, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %410 = add(%408, %409) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %411 = qnn.quantize(%410, 0.0124812f /* ty=float32 span=485_Conv_138_QuantizeLinear.485_scale:0:0 */, 0 /* ty=int32 span=485_Conv_138_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=485_Conv_138_QuantizeLinear:0:0 */;
  %412 = qnn.dequantize(%385, 0.0129049f /* ty=float32 span=471_Concat_126_QuantizeLinear.471_scale:0:0 */, 0 /* ty=int32 span=477_Concat_141_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=477_Concat_141_DequantizeLinear:0:0 */;
  %413 = qnn.dequantize(%411, 0.0124812f /* ty=float32 span=485_Conv_138_QuantizeLinear.485_scale:0:0 */, 0 /* ty=int32 span=485_Concat_141_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=485_Concat_141_DequantizeLinear:0:0 */;
  %414 = (%412, %413) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_141_quant:0:0 */;
  %415 = concatenate(%414, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_141_quant:0:0 */;
  %416 = qnn.quantize(%415, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=487_Concat_141_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=487_Concat_141_QuantizeLinear:0:0 */;
  %417 = qnn.dequantize(%416, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=487_Reshape_143_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=487_Reshape_143_DequantizeLinear:0:0 */;
  %418 = reshape(%417, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_143_quant:0:0 */;
  %419 = qnn.quantize(%418, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=489_Reshape_143_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=489_Reshape_143_QuantizeLinear:0:0 */;
  %420 = qnn.dequantize(%419, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=489_Transpose_144_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=489_Transpose_144_DequantizeLinear:0:0 */;
  %421 = transpose(%420, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_144_quant:0:0 */;
  %422 = qnn.quantize(%421, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=490_Transpose_144_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=490_Transpose_144_QuantizeLinear:0:0 */;
  %423 = qnn.dequantize(%422, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=490_Reshape_146_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=490_Reshape_146_DequantizeLinear:0:0 */;
  %424 = reshape(%423, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_146_quant:0:0 */;
  %425 = qnn.quantize(%424, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=492_Reshape_146_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=492_Reshape_146_QuantizeLinear:0:0 */;
  %426 = qnn.dequantize(%425, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=492_Split_147_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=492_Split_147_DequantizeLinear:0:0 */;
  %427 = split(%426, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_147_quant:0:0 */;
  %428 = %427.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %429 = qnn.quantize(%428, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=493_Split_147_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=493_Split_147_QuantizeLinear:0:0 */;
  %430 = %427.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %431 = qnn.quantize(%430, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=494_Split_147_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=494_Split_147_QuantizeLinear:0:0 */;
  %432 = qnn.dequantize(%431, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=494_Conv_148_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=494_Conv_148_DequantizeLinear:0:0 */;
  %433 = qnn.dequantize(meta[relay.Constant][128] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.5.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.0.weight_quantized:0:0 */, 0.00910655f /* ty=float32 span=ConvBnFusion_W_stage3.5.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.5.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.5.branch2.0.weight_DequantizeLinear:0:0 */;
  %434 = qnn.dequantize(meta[relay.Constant][129] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][130] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.1.bias_scale:0:0 */, meta[relay.Constant][131] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.1.bias_DequantizeLinear:0:0 */;
  %435 = expand_dims(%434, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %436 = nn.conv2d(%432, %433, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_148_quant:0:0 */;
  %437 = expand_dims(%435, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %438 = add(%436, %437) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %439 = qnn.quantize(%438, 0.013922f /* ty=float32 span=496_Conv_148_QuantizeLinear.496_scale:0:0 */, 0 /* ty=int32 span=496_Conv_148_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=496_Conv_148_QuantizeLinear:0:0 */;
  %440 = qnn.dequantize(%439, 0.013922f /* ty=float32 span=496_Conv_148_QuantizeLinear.496_scale:0:0 */, 0 /* ty=int32 span=496_Conv_151_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=496_Conv_151_DequantizeLinear:0:0 */;
  %441 = qnn.dequantize(meta[relay.Constant][132] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.5.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.3.weight_quantized:0:0 */, 0.196091f /* ty=float32 span=ConvBnFusion_W_stage3.5.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.5.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.5.branch2.3.weight_DequantizeLinear:0:0 */;
  %442 = qnn.dequantize(meta[relay.Constant][133] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][134] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.4.bias_scale:0:0 */, meta[relay.Constant][135] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.4.bias_DequantizeLinear:0:0 */;
  %443 = expand_dims(%442, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %444 = nn.conv2d(%440, %441, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_151_quant:0:0 */;
  %445 = expand_dims(%443, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %446 = add(%444, %445) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %447 = qnn.quantize(%446, 0.0442855f /* ty=float32 span=499_Conv_151_QuantizeLinear.499_scale:0:0 */, 120 /* ty=int32 span=499_Conv_151_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=499_Conv_151_QuantizeLinear:0:0 */;
  %448 = qnn.dequantize(%447, 0.0442855f /* ty=float32 span=499_Conv_151_QuantizeLinear.499_scale:0:0 */, 120 /* ty=int32 span=499_Conv_153_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=499_Conv_153_DequantizeLinear:0:0 */;
  %449 = qnn.dequantize(meta[relay.Constant][136] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.5.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.5.weight_quantized:0:0 */, 0.00506218f /* ty=float32 span=ConvBnFusion_W_stage3.5.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.5.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.5.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.5.branch2.5.weight_DequantizeLinear:0:0 */;
  %450 = qnn.dequantize(meta[relay.Constant][137] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][138] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.5.branch2.6.bias_scale:0:0 */, meta[relay.Constant][139] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.5.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.5.branch2.6.bias_DequantizeLinear:0:0 */;
  %451 = expand_dims(%450, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %452 = nn.conv2d(%448, %449, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_153_quant:0:0 */;
  %453 = expand_dims(%451, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %454 = add(%452, %453) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %455 = qnn.quantize(%454, 0.012053f /* ty=float32 span=501_Conv_153_QuantizeLinear.501_scale:0:0 */, 0 /* ty=int32 span=501_Conv_153_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=501_Conv_153_QuantizeLinear:0:0 */;
  %456 = qnn.dequantize(%429, 0.0129049f /* ty=float32 span=487_Concat_141_QuantizeLinear.487_scale:0:0 */, 0 /* ty=int32 span=493_Concat_156_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=493_Concat_156_DequantizeLinear:0:0 */;
  %457 = qnn.dequantize(%455, 0.012053f /* ty=float32 span=501_Conv_153_QuantizeLinear.501_scale:0:0 */, 0 /* ty=int32 span=501_Concat_156_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=501_Concat_156_DequantizeLinear:0:0 */;
  %458 = (%456, %457) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_156_quant:0:0 */;
  %459 = concatenate(%458, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_156_quant:0:0 */;
  %460 = qnn.quantize(%459, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=503_Concat_156_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=503_Concat_156_QuantizeLinear:0:0 */;
  %461 = qnn.dequantize(%460, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=503_Reshape_158_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=503_Reshape_158_DequantizeLinear:0:0 */;
  %462 = reshape(%461, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_158_quant:0:0 */;
  %463 = qnn.quantize(%462, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=505_Reshape_158_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=505_Reshape_158_QuantizeLinear:0:0 */;
  %464 = qnn.dequantize(%463, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=505_Transpose_159_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=505_Transpose_159_DequantizeLinear:0:0 */;
  %465 = transpose(%464, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_159_quant:0:0 */;
  %466 = qnn.quantize(%465, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=506_Transpose_159_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=506_Transpose_159_QuantizeLinear:0:0 */;
  %467 = qnn.dequantize(%466, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=506_Reshape_161_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=506_Reshape_161_DequantizeLinear:0:0 */;
  %468 = reshape(%467, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_161_quant:0:0 */;
  %469 = qnn.quantize(%468, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=508_Reshape_161_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=508_Reshape_161_QuantizeLinear:0:0 */;
  %470 = qnn.dequantize(%469, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=508_Split_162_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=508_Split_162_DequantizeLinear:0:0 */;
  %471 = split(%470, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_162_quant:0:0 */;
  %472 = %471.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %473 = qnn.quantize(%472, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=509_Split_162_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=509_Split_162_QuantizeLinear:0:0 */;
  %474 = %471.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %475 = qnn.quantize(%474, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=510_Split_162_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=510_Split_162_QuantizeLinear:0:0 */;
  %476 = qnn.dequantize(%475, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=510_Conv_163_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=510_Conv_163_DequantizeLinear:0:0 */;
  %477 = qnn.dequantize(meta[relay.Constant][140] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.6.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.0.weight_quantized:0:0 */, 0.00770119f /* ty=float32 span=ConvBnFusion_W_stage3.6.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.6.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.6.branch2.0.weight_DequantizeLinear:0:0 */;
  %478 = qnn.dequantize(meta[relay.Constant][141] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][142] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.1.bias_scale:0:0 */, meta[relay.Constant][143] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.1.bias_DequantizeLinear:0:0 */;
  %479 = expand_dims(%478, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %480 = nn.conv2d(%476, %477, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_163_quant:0:0 */;
  %481 = expand_dims(%479, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %482 = add(%480, %481) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %483 = qnn.quantize(%482, 0.0108827f /* ty=float32 span=512_Conv_163_QuantizeLinear.512_scale:0:0 */, 0 /* ty=int32 span=512_Conv_163_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=512_Conv_163_QuantizeLinear:0:0 */;
  %484 = qnn.dequantize(%483, 0.0108827f /* ty=float32 span=512_Conv_163_QuantizeLinear.512_scale:0:0 */, 0 /* ty=int32 span=512_Conv_166_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=512_Conv_166_DequantizeLinear:0:0 */;
  %485 = qnn.dequantize(meta[relay.Constant][144] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.6.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.3.weight_quantized:0:0 */, 0.196072f /* ty=float32 span=ConvBnFusion_W_stage3.6.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.6.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.6.branch2.3.weight_DequantizeLinear:0:0 */;
  %486 = qnn.dequantize(meta[relay.Constant][145] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][146] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.4.bias_scale:0:0 */, meta[relay.Constant][147] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.4.bias_DequantizeLinear:0:0 */;
  %487 = expand_dims(%486, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %488 = nn.conv2d(%484, %485, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_166_quant:0:0 */;
  %489 = expand_dims(%487, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %490 = add(%488, %489) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %491 = qnn.quantize(%490, 0.035442f /* ty=float32 span=515_Conv_166_QuantizeLinear.515_scale:0:0 */, 132 /* ty=int32 span=515_Conv_166_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=515_Conv_166_QuantizeLinear:0:0 */;
  %492 = qnn.dequantize(%491, 0.035442f /* ty=float32 span=515_Conv_166_QuantizeLinear.515_scale:0:0 */, 132 /* ty=int32 span=515_Conv_168_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=515_Conv_168_DequantizeLinear:0:0 */;
  %493 = qnn.dequantize(meta[relay.Constant][148] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.6.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.5.weight_quantized:0:0 */, 0.00600547f /* ty=float32 span=ConvBnFusion_W_stage3.6.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.6.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.6.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.6.branch2.5.weight_DequantizeLinear:0:0 */;
  %494 = qnn.dequantize(meta[relay.Constant][149] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][150] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.6.branch2.6.bias_scale:0:0 */, meta[relay.Constant][151] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.6.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.6.branch2.6.bias_DequantizeLinear:0:0 */;
  %495 = expand_dims(%494, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %496 = nn.conv2d(%492, %493, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_168_quant:0:0 */;
  %497 = expand_dims(%495, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %498 = add(%496, %497) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %499 = qnn.quantize(%498, 0.0126897f /* ty=float32 span=517_Conv_168_QuantizeLinear.517_scale:0:0 */, 0 /* ty=int32 span=517_Conv_168_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=517_Conv_168_QuantizeLinear:0:0 */;
  %500 = qnn.dequantize(%473, 0.0129049f /* ty=float32 span=503_Concat_156_QuantizeLinear.503_scale:0:0 */, 0 /* ty=int32 span=509_Concat_171_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=509_Concat_171_DequantizeLinear:0:0 */;
  %501 = qnn.dequantize(%499, 0.0126897f /* ty=float32 span=517_Conv_168_QuantizeLinear.517_scale:0:0 */, 0 /* ty=int32 span=517_Concat_171_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=517_Concat_171_DequantizeLinear:0:0 */;
  %502 = (%500, %501) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_171_quant:0:0 */;
  %503 = concatenate(%502, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_171_quant:0:0 */;
  %504 = qnn.quantize(%503, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=519_Concat_171_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=519_Concat_171_QuantizeLinear:0:0 */;
  %505 = qnn.dequantize(%504, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=519_Reshape_173_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=519_Reshape_173_DequantizeLinear:0:0 */;
  %506 = reshape(%505, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_173_quant:0:0 */;
  %507 = qnn.quantize(%506, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=521_Reshape_173_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=521_Reshape_173_QuantizeLinear:0:0 */;
  %508 = qnn.dequantize(%507, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=521_Transpose_174_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=521_Transpose_174_DequantizeLinear:0:0 */;
  %509 = transpose(%508, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_174_quant:0:0 */;
  %510 = qnn.quantize(%509, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=522_Transpose_174_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=522_Transpose_174_QuantizeLinear:0:0 */;
  %511 = qnn.dequantize(%510, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=522_Reshape_176_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=522_Reshape_176_DequantizeLinear:0:0 */;
  %512 = reshape(%511, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_176_quant:0:0 */;
  %513 = qnn.quantize(%512, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=524_Reshape_176_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=524_Reshape_176_QuantizeLinear:0:0 */;
  %514 = qnn.dequantize(%513, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=524_Split_177_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=524_Split_177_DequantizeLinear:0:0 */;
  %515 = split(%514, indices_or_sections=[116], axis=1) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Split_177_quant:0:0 */;
  %516 = %515.0 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %517 = qnn.quantize(%516, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=525_Split_177_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=525_Split_177_QuantizeLinear:0:0 */;
  %518 = %515.1 /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %519 = qnn.quantize(%518, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=526_Split_177_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=526_Split_177_QuantizeLinear:0:0 */;
  %520 = qnn.dequantize(%519, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=526_Conv_178_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=526_Conv_178_DequantizeLinear:0:0 */;
  %521 = qnn.dequantize(meta[relay.Constant][152] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.7.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.0.weight_quantized:0:0 */, 0.00695787f /* ty=float32 span=ConvBnFusion_W_stage3.7.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.7.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.7.branch2.0.weight_DequantizeLinear:0:0 */;
  %522 = qnn.dequantize(meta[relay.Constant][153] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][154] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.1.bias_scale:0:0 */, meta[relay.Constant][155] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.1.bias_DequantizeLinear:0:0 */;
  %523 = expand_dims(%522, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %524 = nn.conv2d(%520, %521, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_178_quant:0:0 */;
  %525 = expand_dims(%523, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %526 = add(%524, %525) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %527 = qnn.quantize(%526, 0.0109075f /* ty=float32 span=528_Conv_178_QuantizeLinear.528_scale:0:0 */, 0 /* ty=int32 span=528_Conv_178_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=528_Conv_178_QuantizeLinear:0:0 */;
  %528 = qnn.dequantize(%527, 0.0109075f /* ty=float32 span=528_Conv_178_QuantizeLinear.528_scale:0:0 */, 0 /* ty=int32 span=528_Conv_181_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=528_Conv_181_DequantizeLinear:0:0 */;
  %529 = qnn.dequantize(meta[relay.Constant][156] /* ty=Tensor[(116, 1, 3, 3), int8] span=ConvBnFusion_W_stage3.7.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.3.weight_quantized:0:0 */, 0.569224f /* ty=float32 span=ConvBnFusion_W_stage3.7.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.7.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 1, 3, 3), float32] span=ConvBnFusion_W_stage3.7.branch2.3.weight_DequantizeLinear:0:0 */;
  %530 = qnn.dequantize(meta[relay.Constant][157] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][158] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.4.bias_scale:0:0 */, meta[relay.Constant][159] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.4.bias_DequantizeLinear:0:0 */;
  %531 = expand_dims(%530, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %532 = nn.conv2d(%528, %529, padding=[1, 1, 1, 1], groups=116, channels=116, kernel_size=[3, 3]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_181_quant:0:0 */;
  %533 = expand_dims(%531, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %534 = add(%532, %533) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %535 = qnn.quantize(%534, 0.0477198f /* ty=float32 span=531_Conv_181_QuantizeLinear.531_scale:0:0 */, 168 /* ty=int32 span=531_Conv_181_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=531_Conv_181_QuantizeLinear:0:0 */;
  %536 = qnn.dequantize(%535, 0.0477198f /* ty=float32 span=531_Conv_181_QuantizeLinear.531_scale:0:0 */, 168 /* ty=int32 span=531_Conv_183_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=531_Conv_183_DequantizeLinear:0:0 */;
  %537 = qnn.dequantize(meta[relay.Constant][160] /* ty=Tensor[(116, 116, 1, 1), int8] span=ConvBnFusion_W_stage3.7.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.5.weight_quantized:0:0 */, 0.00602498f /* ty=float32 span=ConvBnFusion_W_stage3.7.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage3.7.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage3.7.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116, 116, 1, 1), float32] span=ConvBnFusion_W_stage3.7.branch2.5.weight_DequantizeLinear:0:0 */;
  %538 = qnn.dequantize(meta[relay.Constant][161] /* ty=Tensor[(116), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][162] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage3.7.branch2.6.bias_scale:0:0 */, meta[relay.Constant][163] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage3.7.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(116), float32] span=ConvBnFusion_BN_B_stage3.7.branch2.6.bias_DequantizeLinear:0:0 */;
  %539 = expand_dims(%538, axis=1, num_newaxis=2) /* ty=Tensor[(116, 1, 1), float32] */;
  %540 = nn.conv2d(%536, %537, padding=[0, 0, 0, 0], channels=116, kernel_size=[1, 1]) /* ty=Tensor[(1, 116, 14, 14), float32] span=Conv_183_quant:0:0 */;
  %541 = expand_dims(%539, axis=0) /* ty=Tensor[(1, 116, 1, 1), float32] */;
  %542 = add(%540, %541) /* ty=Tensor[(1, 116, 14, 14), float32] */;
  %543 = qnn.quantize(%542, 0.0169453f /* ty=float32 span=533_Conv_183_QuantizeLinear.533_scale:0:0 */, 0 /* ty=int32 span=533_Conv_183_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 14, 14), uint8] span=533_Conv_183_QuantizeLinear:0:0 */;
  %544 = qnn.dequantize(%517, 0.0126897f /* ty=float32 span=519_Concat_171_QuantizeLinear.519_scale:0:0 */, 0 /* ty=int32 span=525_Concat_186_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=525_Concat_186_DequantizeLinear:0:0 */;
  %545 = qnn.dequantize(%543, 0.0169453f /* ty=float32 span=533_Conv_183_QuantizeLinear.533_scale:0:0 */, 0 /* ty=int32 span=533_Concat_186_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 14, 14), float32] span=533_Concat_186_DequantizeLinear:0:0 */;
  %546 = (%544, %545) /* ty=(Tensor[(1, 116, 14, 14), float32], Tensor[(1, 116, 14, 14), float32]) span=Concat_186_quant:0:0 */;
  %547 = concatenate(%546, axis=1) /* ty=Tensor[(1, 232, 14, 14), float32] span=Concat_186_quant:0:0 */;
  %548 = qnn.quantize(%547, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=535_Concat_186_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=535_Concat_186_QuantizeLinear:0:0 */;
  %549 = qnn.dequantize(%548, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=535_Reshape_188_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=535_Reshape_188_DequantizeLinear:0:0 */;
  %550 = reshape(%549, newshape=[1, 2, 116, 14, 14]) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=Reshape_188_quant:0:0 */;
  %551 = qnn.quantize(%550, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=537_Reshape_188_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), uint8] span=537_Reshape_188_QuantizeLinear:0:0 */;
  %552 = qnn.dequantize(%551, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=537_Transpose_189_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 116, 14, 14), float32] span=537_Transpose_189_DequantizeLinear:0:0 */;
  %553 = transpose(%552, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=Transpose_189_quant:0:0 */;
  %554 = qnn.quantize(%553, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=538_Transpose_189_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), uint8] span=538_Transpose_189_QuantizeLinear:0:0 */;
  %555 = qnn.dequantize(%554, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=538_Reshape_191_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 116, 2, 14, 14), float32] span=538_Reshape_191_DequantizeLinear:0:0 */;
  %556 = reshape(%555, newshape=[1, -1, 14, 14]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Reshape_191_quant:0:0 */;
  %557 = qnn.quantize(%556, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=540_Reshape_191_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=540_Reshape_191_QuantizeLinear:0:0 */;
  %558 = qnn.dequantize(%557, 0.0169453f /* ty=float32 span=535_Concat_186_QuantizeLinear.535_scale:0:0 */, 0 /* ty=int32 span=540_Conv_197_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=540_Conv_197_DequantizeLinear:0:0 */;
  %559 = qnn.dequantize(meta[relay.Constant][164] /* ty=Tensor[(232, 1, 3, 3), int8] span=ConvBnFusion_W_stage4.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch1.0.weight_quantized:0:0 */, 0.206313f /* ty=float32 span=ConvBnFusion_W_stage4.0.branch1.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch1.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.0.branch1.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 1, 3, 3), float32] span=ConvBnFusion_W_stage4.0.branch1.0.weight_DequantizeLinear:0:0 */;
  %560 = qnn.dequantize(meta[relay.Constant][165] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch1.1.bias_quantized:0:0 */, meta[relay.Constant][166] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.0.branch1.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch1.1.bias_scale:0:0 */, meta[relay.Constant][167] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.0.branch1.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.0.branch1.1.bias_DequantizeLinear:0:0 */;
  %561 = expand_dims(%560, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %562 = nn.conv2d(%558, %559, strides=[2, 2], padding=[1, 1, 1, 1], groups=232, channels=232, kernel_size=[3, 3]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_192_quant:0:0 */;
  %563 = expand_dims(%561, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %564 = add(%562, %563) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %565 = qnn.quantize(%564, 0.0411669f /* ty=float32 span=542_Conv_192_QuantizeLinear.542_scale:0:0 */, 112 /* ty=int32 span=542_Conv_192_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=542_Conv_192_QuantizeLinear:0:0 */;
  %566 = qnn.dequantize(%565, 0.0411669f /* ty=float32 span=542_Conv_192_QuantizeLinear.542_scale:0:0 */, 112 /* ty=int32 span=542_Conv_194_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=542_Conv_194_DequantizeLinear:0:0 */;
  %567 = qnn.dequantize(meta[relay.Constant][168] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch1.2.weight_quantized:0:0 */, 0.00570585f /* ty=float32 span=ConvBnFusion_W_stage4.0.branch1.2.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch1.2.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.0.branch1.2.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.0.branch1.2.weight_DequantizeLinear:0:0 */;
  %568 = qnn.dequantize(meta[relay.Constant][169] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch1.3.bias_quantized:0:0 */, meta[relay.Constant][170] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.0.branch1.3.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch1.3.bias_scale:0:0 */, meta[relay.Constant][171] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.0.branch1.3.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.0.branch1.3.bias_DequantizeLinear:0:0 */;
  %569 = expand_dims(%568, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %570 = nn.conv2d(%566, %567, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_194_quant:0:0 */;
  %571 = expand_dims(%569, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %572 = add(%570, %571) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %573 = qnn.quantize(%572, 0.0136809f /* ty=float32 span=544_Conv_194_QuantizeLinear.544_scale:0:0 */, 0 /* ty=int32 span=544_Conv_194_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=544_Conv_194_QuantizeLinear:0:0 */;
  %574 = qnn.dequantize(meta[relay.Constant][172] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.0.weight_quantized:0:0 */, 0.00506701f /* ty=float32 span=ConvBnFusion_W_stage4.0.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.0.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.0.branch2.0.weight_DequantizeLinear:0:0 */;
  %575 = qnn.dequantize(meta[relay.Constant][173] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][174] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.1.bias_scale:0:0 */, meta[relay.Constant][175] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.1.bias_DequantizeLinear:0:0 */;
  %576 = expand_dims(%575, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %577 = nn.conv2d(%558, %574, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 14, 14), float32] span=Conv_197_quant:0:0 */;
  %578 = expand_dims(%576, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %579 = add(%577, %578) /* ty=Tensor[(1, 232, 14, 14), float32] */;
  %580 = qnn.quantize(%579, 0.0123346f /* ty=float32 span=547_Conv_197_QuantizeLinear.547_scale:0:0 */, 0 /* ty=int32 span=547_Conv_197_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 14, 14), uint8] span=547_Conv_197_QuantizeLinear:0:0 */;
  %581 = qnn.dequantize(%580, 0.0123346f /* ty=float32 span=547_Conv_197_QuantizeLinear.547_scale:0:0 */, 0 /* ty=int32 span=547_Conv_200_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 14, 14), float32] span=547_Conv_200_DequantizeLinear:0:0 */;
  %582 = qnn.dequantize(meta[relay.Constant][176] /* ty=Tensor[(232, 1, 3, 3), int8] span=ConvBnFusion_W_stage4.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.3.weight_quantized:0:0 */, 0.302244f /* ty=float32 span=ConvBnFusion_W_stage4.0.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.0.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 1, 3, 3), float32] span=ConvBnFusion_W_stage4.0.branch2.3.weight_DequantizeLinear:0:0 */;
  %583 = qnn.dequantize(meta[relay.Constant][177] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][178] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.4.bias_scale:0:0 */, meta[relay.Constant][179] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.4.bias_DequantizeLinear:0:0 */;
  %584 = expand_dims(%583, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %585 = nn.conv2d(%581, %582, strides=[2, 2], padding=[1, 1, 1, 1], groups=232, channels=232, kernel_size=[3, 3]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_200_quant:0:0 */;
  %586 = expand_dims(%584, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %587 = add(%585, %586) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %588 = qnn.quantize(%587, 0.0607285f /* ty=float32 span=550_Conv_200_QuantizeLinear.550_scale:0:0 */, 142 /* ty=int32 span=550_Conv_200_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=550_Conv_200_QuantizeLinear:0:0 */;
  %589 = qnn.dequantize(%588, 0.0607285f /* ty=float32 span=550_Conv_200_QuantizeLinear.550_scale:0:0 */, 142 /* ty=int32 span=550_Conv_202_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=550_Conv_202_DequantizeLinear:0:0 */;
  %590 = qnn.dequantize(meta[relay.Constant][180] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.5.weight_quantized:0:0 */, 0.00317467f /* ty=float32 span=ConvBnFusion_W_stage4.0.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.0.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.0.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.0.branch2.5.weight_DequantizeLinear:0:0 */;
  %591 = qnn.dequantize(meta[relay.Constant][181] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][182] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.0.branch2.6.bias_scale:0:0 */, meta[relay.Constant][183] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.0.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.0.branch2.6.bias_DequantizeLinear:0:0 */;
  %592 = expand_dims(%591, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %593 = nn.conv2d(%589, %590, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_202_quant:0:0 */;
  %594 = expand_dims(%592, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %595 = add(%593, %594) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %596 = qnn.quantize(%595, 0.0131402f /* ty=float32 span=552_Conv_202_QuantizeLinear.552_scale:0:0 */, 0 /* ty=int32 span=552_Conv_202_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=552_Conv_202_QuantizeLinear:0:0 */;
  %597 = qnn.dequantize(%573, 0.0136809f /* ty=float32 span=544_Conv_194_QuantizeLinear.544_scale:0:0 */, 0 /* ty=int32 span=544_Concat_205_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=544_Concat_205_DequantizeLinear:0:0 */;
  %598 = qnn.dequantize(%596, 0.0131402f /* ty=float32 span=552_Conv_202_QuantizeLinear.552_scale:0:0 */, 0 /* ty=int32 span=552_Concat_205_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=552_Concat_205_DequantizeLinear:0:0 */;
  %599 = (%597, %598) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Concat_205_quant:0:0 */;
  %600 = concatenate(%599, axis=1) /* ty=Tensor[(1, 464, 7, 7), float32] span=Concat_205_quant:0:0 */;
  %601 = qnn.quantize(%600, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=554_Concat_205_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=554_Concat_205_QuantizeLinear:0:0 */;
  %602 = qnn.dequantize(%601, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=554_Reshape_207_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=554_Reshape_207_DequantizeLinear:0:0 */;
  %603 = reshape(%602, newshape=[1, 2, 232, 7, 7]) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=Reshape_207_quant:0:0 */;
  %604 = qnn.quantize(%603, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=556_Reshape_207_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), uint8] span=556_Reshape_207_QuantizeLinear:0:0 */;
  %605 = qnn.dequantize(%604, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=556_Transpose_208_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=556_Transpose_208_DequantizeLinear:0:0 */;
  %606 = transpose(%605, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=Transpose_208_quant:0:0 */;
  %607 = qnn.quantize(%606, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=557_Transpose_208_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), uint8] span=557_Transpose_208_QuantizeLinear:0:0 */;
  %608 = qnn.dequantize(%607, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=557_Reshape_210_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=557_Reshape_210_DequantizeLinear:0:0 */;
  %609 = reshape(%608, newshape=[1, -1, 7, 7]) /* ty=Tensor[(1, 464, 7, 7), float32] span=Reshape_210_quant:0:0 */;
  %610 = qnn.quantize(%609, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=559_Reshape_210_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=559_Reshape_210_QuantizeLinear:0:0 */;
  %611 = qnn.dequantize(%610, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=559_Split_211_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=559_Split_211_DequantizeLinear:0:0 */;
  %612 = split(%611, indices_or_sections=[232], axis=1) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Split_211_quant:0:0 */;
  %613 = %612.0 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %614 = qnn.quantize(%613, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=560_Split_211_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=560_Split_211_QuantizeLinear:0:0 */;
  %615 = %612.1 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %616 = qnn.quantize(%615, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=561_Split_211_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=561_Split_211_QuantizeLinear:0:0 */;
  %617 = qnn.dequantize(%616, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=561_Conv_212_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=561_Conv_212_DequantizeLinear:0:0 */;
  %618 = qnn.dequantize(meta[relay.Constant][184] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.0.weight_quantized:0:0 */, 0.00429963f /* ty=float32 span=ConvBnFusion_W_stage4.1.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.1.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.1.branch2.0.weight_DequantizeLinear:0:0 */;
  %619 = qnn.dequantize(meta[relay.Constant][185] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][186] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.1.bias_scale:0:0 */, meta[relay.Constant][187] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.1.bias_DequantizeLinear:0:0 */;
  %620 = expand_dims(%619, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %621 = nn.conv2d(%617, %618, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_212_quant:0:0 */;
  %622 = expand_dims(%620, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %623 = add(%621, %622) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %624 = qnn.quantize(%623, 0.0109801f /* ty=float32 span=563_Conv_212_QuantizeLinear.563_scale:0:0 */, 0 /* ty=int32 span=563_Conv_212_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=563_Conv_212_QuantizeLinear:0:0 */;
  %625 = qnn.dequantize(%624, 0.0109801f /* ty=float32 span=563_Conv_212_QuantizeLinear.563_scale:0:0 */, 0 /* ty=int32 span=563_Conv_215_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=563_Conv_215_DequantizeLinear:0:0 */;
  %626 = qnn.dequantize(meta[relay.Constant][188] /* ty=Tensor[(232, 1, 3, 3), int8] span=ConvBnFusion_W_stage4.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.3.weight_quantized:0:0 */, 0.318861f /* ty=float32 span=ConvBnFusion_W_stage4.1.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.1.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 1, 3, 3), float32] span=ConvBnFusion_W_stage4.1.branch2.3.weight_DequantizeLinear:0:0 */;
  %627 = qnn.dequantize(meta[relay.Constant][189] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][190] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.4.bias_scale:0:0 */, meta[relay.Constant][191] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.4.bias_DequantizeLinear:0:0 */;
  %628 = expand_dims(%627, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %629 = nn.conv2d(%625, %626, padding=[1, 1, 1, 1], groups=232, channels=232, kernel_size=[3, 3]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_215_quant:0:0 */;
  %630 = expand_dims(%628, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %631 = add(%629, %630) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %632 = qnn.quantize(%631, 0.0374605f /* ty=float32 span=566_Conv_215_QuantizeLinear.566_scale:0:0 */, 125 /* ty=int32 span=566_Conv_215_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=566_Conv_215_QuantizeLinear:0:0 */;
  %633 = qnn.dequantize(%632, 0.0374605f /* ty=float32 span=566_Conv_215_QuantizeLinear.566_scale:0:0 */, 125 /* ty=int32 span=566_Conv_217_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=566_Conv_217_DequantizeLinear:0:0 */;
  %634 = qnn.dequantize(meta[relay.Constant][192] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.5.weight_quantized:0:0 */, 0.00398435f /* ty=float32 span=ConvBnFusion_W_stage4.1.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.1.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.1.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.1.branch2.5.weight_DequantizeLinear:0:0 */;
  %635 = qnn.dequantize(meta[relay.Constant][193] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][194] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.1.branch2.6.bias_scale:0:0 */, meta[relay.Constant][195] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.1.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.1.branch2.6.bias_DequantizeLinear:0:0 */;
  %636 = expand_dims(%635, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %637 = nn.conv2d(%633, %634, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_217_quant:0:0 */;
  %638 = expand_dims(%636, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %639 = add(%637, %638) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %640 = qnn.quantize(%639, 0.0133719f /* ty=float32 span=568_Conv_217_QuantizeLinear.568_scale:0:0 */, 0 /* ty=int32 span=568_Conv_217_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=568_Conv_217_QuantizeLinear:0:0 */;
  %641 = qnn.dequantize(%614, 0.0136809f /* ty=float32 span=554_Concat_205_QuantizeLinear.554_scale:0:0 */, 0 /* ty=int32 span=560_Concat_220_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=560_Concat_220_DequantizeLinear:0:0 */;
  %642 = qnn.dequantize(%640, 0.0133719f /* ty=float32 span=568_Conv_217_QuantizeLinear.568_scale:0:0 */, 0 /* ty=int32 span=568_Concat_220_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=568_Concat_220_DequantizeLinear:0:0 */;
  %643 = (%641, %642) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Concat_220_quant:0:0 */;
  %644 = concatenate(%643, axis=1) /* ty=Tensor[(1, 464, 7, 7), float32] span=Concat_220_quant:0:0 */;
  %645 = qnn.quantize(%644, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=570_Concat_220_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=570_Concat_220_QuantizeLinear:0:0 */;
  %646 = qnn.dequantize(%645, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=570_Reshape_222_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=570_Reshape_222_DequantizeLinear:0:0 */;
  %647 = reshape(%646, newshape=[1, 2, 232, 7, 7]) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=Reshape_222_quant:0:0 */;
  %648 = qnn.quantize(%647, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=572_Reshape_222_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), uint8] span=572_Reshape_222_QuantizeLinear:0:0 */;
  %649 = qnn.dequantize(%648, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=572_Transpose_223_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=572_Transpose_223_DequantizeLinear:0:0 */;
  %650 = transpose(%649, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=Transpose_223_quant:0:0 */;
  %651 = qnn.quantize(%650, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=573_Transpose_223_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), uint8] span=573_Transpose_223_QuantizeLinear:0:0 */;
  %652 = qnn.dequantize(%651, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=573_Reshape_225_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=573_Reshape_225_DequantizeLinear:0:0 */;
  %653 = reshape(%652, newshape=[1, -1, 7, 7]) /* ty=Tensor[(1, 464, 7, 7), float32] span=Reshape_225_quant:0:0 */;
  %654 = qnn.quantize(%653, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=575_Reshape_225_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=575_Reshape_225_QuantizeLinear:0:0 */;
  %655 = qnn.dequantize(%654, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=575_Split_226_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=575_Split_226_DequantizeLinear:0:0 */;
  %656 = split(%655, indices_or_sections=[232], axis=1) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Split_226_quant:0:0 */;
  %657 = %656.0 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %658 = qnn.quantize(%657, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=576_Split_226_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=576_Split_226_QuantizeLinear:0:0 */;
  %659 = %656.1 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %660 = qnn.quantize(%659, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=577_Split_226_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=577_Split_226_QuantizeLinear:0:0 */;
  %661 = qnn.dequantize(%660, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=577_Conv_227_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=577_Conv_227_DequantizeLinear:0:0 */;
  %662 = qnn.dequantize(meta[relay.Constant][196] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.0.weight_quantized:0:0 */, 0.00522883f /* ty=float32 span=ConvBnFusion_W_stage4.2.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.2.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.2.branch2.0.weight_DequantizeLinear:0:0 */;
  %663 = qnn.dequantize(meta[relay.Constant][197] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][198] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.1.bias_scale:0:0 */, meta[relay.Constant][199] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.1.bias_DequantizeLinear:0:0 */;
  %664 = expand_dims(%663, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %665 = nn.conv2d(%661, %662, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_227_quant:0:0 */;
  %666 = expand_dims(%664, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %667 = add(%665, %666) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %668 = qnn.quantize(%667, 0.00915294f /* ty=float32 span=579_Conv_227_QuantizeLinear.579_scale:0:0 */, 0 /* ty=int32 span=579_Conv_227_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=579_Conv_227_QuantizeLinear:0:0 */;
  %669 = qnn.dequantize(%668, 0.00915294f /* ty=float32 span=579_Conv_227_QuantizeLinear.579_scale:0:0 */, 0 /* ty=int32 span=579_Conv_230_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=579_Conv_230_DequantizeLinear:0:0 */;
  %670 = qnn.dequantize(meta[relay.Constant][200] /* ty=Tensor[(232, 1, 3, 3), int8] span=ConvBnFusion_W_stage4.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.3.weight_quantized:0:0 */, 0.147546f /* ty=float32 span=ConvBnFusion_W_stage4.2.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.2.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 1, 3, 3), float32] span=ConvBnFusion_W_stage4.2.branch2.3.weight_DequantizeLinear:0:0 */;
  %671 = qnn.dequantize(meta[relay.Constant][201] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][202] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.4.bias_scale:0:0 */, meta[relay.Constant][203] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.4.bias_DequantizeLinear:0:0 */;
  %672 = expand_dims(%671, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %673 = nn.conv2d(%669, %670, padding=[1, 1, 1, 1], groups=232, channels=232, kernel_size=[3, 3]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_230_quant:0:0 */;
  %674 = expand_dims(%672, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %675 = add(%673, %674) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %676 = qnn.quantize(%675, 0.0444197f /* ty=float32 span=582_Conv_230_QuantizeLinear.582_scale:0:0 */, 142 /* ty=int32 span=582_Conv_230_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=582_Conv_230_QuantizeLinear:0:0 */;
  %677 = qnn.dequantize(%676, 0.0444197f /* ty=float32 span=582_Conv_230_QuantizeLinear.582_scale:0:0 */, 142 /* ty=int32 span=582_Conv_232_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=582_Conv_232_DequantizeLinear:0:0 */;
  %678 = qnn.dequantize(meta[relay.Constant][204] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.5.weight_quantized:0:0 */, 0.00569005f /* ty=float32 span=ConvBnFusion_W_stage4.2.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.2.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.2.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.2.branch2.5.weight_DequantizeLinear:0:0 */;
  %679 = qnn.dequantize(meta[relay.Constant][205] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][206] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.2.branch2.6.bias_scale:0:0 */, meta[relay.Constant][207] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.2.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.2.branch2.6.bias_DequantizeLinear:0:0 */;
  %680 = expand_dims(%679, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %681 = nn.conv2d(%677, %678, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_232_quant:0:0 */;
  %682 = expand_dims(%680, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %683 = add(%681, %682) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %684 = qnn.quantize(%683, 0.013558f /* ty=float32 span=584_Conv_232_QuantizeLinear.584_scale:0:0 */, 0 /* ty=int32 span=584_Conv_232_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=584_Conv_232_QuantizeLinear:0:0 */;
  %685 = qnn.dequantize(%658, 0.0133719f /* ty=float32 span=570_Concat_220_QuantizeLinear.570_scale:0:0 */, 0 /* ty=int32 span=576_Concat_235_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=576_Concat_235_DequantizeLinear:0:0 */;
  %686 = qnn.dequantize(%684, 0.013558f /* ty=float32 span=584_Conv_232_QuantizeLinear.584_scale:0:0 */, 0 /* ty=int32 span=584_Concat_235_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=584_Concat_235_DequantizeLinear:0:0 */;
  %687 = (%685, %686) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Concat_235_quant:0:0 */;
  %688 = concatenate(%687, axis=1) /* ty=Tensor[(1, 464, 7, 7), float32] span=Concat_235_quant:0:0 */;
  %689 = qnn.quantize(%688, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=586_Concat_235_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=586_Concat_235_QuantizeLinear:0:0 */;
  %690 = qnn.dequantize(%689, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=586_Reshape_237_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=586_Reshape_237_DequantizeLinear:0:0 */;
  %691 = reshape(%690, newshape=[1, 2, 232, 7, 7]) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=Reshape_237_quant:0:0 */;
  %692 = qnn.quantize(%691, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=588_Reshape_237_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), uint8] span=588_Reshape_237_QuantizeLinear:0:0 */;
  %693 = qnn.dequantize(%692, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=588_Transpose_238_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=588_Transpose_238_DequantizeLinear:0:0 */;
  %694 = transpose(%693, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=Transpose_238_quant:0:0 */;
  %695 = qnn.quantize(%694, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=589_Transpose_238_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), uint8] span=589_Transpose_238_QuantizeLinear:0:0 */;
  %696 = qnn.dequantize(%695, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=589_Reshape_240_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=589_Reshape_240_DequantizeLinear:0:0 */;
  %697 = reshape(%696, newshape=[1, -1, 7, 7]) /* ty=Tensor[(1, 464, 7, 7), float32] span=Reshape_240_quant:0:0 */;
  %698 = qnn.quantize(%697, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=591_Reshape_240_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=591_Reshape_240_QuantizeLinear:0:0 */;
  %699 = qnn.dequantize(%698, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=591_Split_241_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=591_Split_241_DequantizeLinear:0:0 */;
  %700 = split(%699, indices_or_sections=[232], axis=1) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Split_241_quant:0:0 */;
  %701 = %700.0 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %702 = qnn.quantize(%701, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=592_Split_241_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=592_Split_241_QuantizeLinear:0:0 */;
  %703 = %700.1 /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %704 = qnn.quantize(%703, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=593_Split_241_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=593_Split_241_QuantizeLinear:0:0 */;
  %705 = qnn.dequantize(%704, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=593_Conv_242_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=593_Conv_242_DequantizeLinear:0:0 */;
  %706 = qnn.dequantize(meta[relay.Constant][208] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.0.weight_quantized:0:0 */, 0.00401605f /* ty=float32 span=ConvBnFusion_W_stage4.3.branch2.0.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.3.branch2.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.3.branch2.0.weight_DequantizeLinear:0:0 */;
  %707 = qnn.dequantize(meta[relay.Constant][209] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.1.bias_quantized:0:0 */, meta[relay.Constant][210] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.1.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.1.bias_scale:0:0 */, meta[relay.Constant][211] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.1.bias_DequantizeLinear:0:0 */;
  %708 = expand_dims(%707, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %709 = nn.conv2d(%705, %706, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_242_quant:0:0 */;
  %710 = expand_dims(%708, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %711 = add(%709, %710) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %712 = qnn.quantize(%711, 0.00882659f /* ty=float32 span=595_Conv_242_QuantizeLinear.595_scale:0:0 */, 0 /* ty=int32 span=595_Conv_242_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=595_Conv_242_QuantizeLinear:0:0 */;
  %713 = qnn.dequantize(%712, 0.00882659f /* ty=float32 span=595_Conv_242_QuantizeLinear.595_scale:0:0 */, 0 /* ty=int32 span=595_Conv_245_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=595_Conv_245_DequantizeLinear:0:0 */;
  %714 = qnn.dequantize(meta[relay.Constant][212] /* ty=Tensor[(232, 1, 3, 3), int8] span=ConvBnFusion_W_stage4.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.3.weight_quantized:0:0 */, 0.269099f /* ty=float32 span=ConvBnFusion_W_stage4.3.branch2.3.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.3.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.3.branch2.3.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 1, 3, 3), float32] span=ConvBnFusion_W_stage4.3.branch2.3.weight_DequantizeLinear:0:0 */;
  %715 = qnn.dequantize(meta[relay.Constant][213] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.4.bias_quantized:0:0 */, meta[relay.Constant][214] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.4.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.4.bias_scale:0:0 */, meta[relay.Constant][215] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.4.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.4.bias_DequantizeLinear:0:0 */;
  %716 = expand_dims(%715, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %717 = nn.conv2d(%713, %714, padding=[1, 1, 1, 1], groups=232, channels=232, kernel_size=[3, 3]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_245_quant:0:0 */;
  %718 = expand_dims(%716, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %719 = add(%717, %718) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %720 = qnn.quantize(%719, 0.0462186f /* ty=float32 span=598_Conv_245_QuantizeLinear.598_scale:0:0 */, 137 /* ty=int32 span=598_Conv_245_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=598_Conv_245_QuantizeLinear:0:0 */;
  %721 = qnn.dequantize(%720, 0.0462186f /* ty=float32 span=598_Conv_245_QuantizeLinear.598_scale:0:0 */, 137 /* ty=int32 span=598_Conv_247_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=598_Conv_247_DequantizeLinear:0:0 */;
  %722 = qnn.dequantize(meta[relay.Constant][216] /* ty=Tensor[(232, 232, 1, 1), int8] span=ConvBnFusion_W_stage4.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.5.weight_quantized:0:0 */, 0.00345495f /* ty=float32 span=ConvBnFusion_W_stage4.3.branch2.5.weight_DequantizeLinear.ConvBnFusion_W_stage4.3.branch2.5.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_stage4.3.branch2.5.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232, 232, 1, 1), float32] span=ConvBnFusion_W_stage4.3.branch2.5.weight_DequantizeLinear:0:0 */;
  %723 = qnn.dequantize(meta[relay.Constant][217] /* ty=Tensor[(232), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.6.bias_quantized:0:0 */, meta[relay.Constant][218] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.6.bias_DequantizeLinear.ConvBnFusion_BN_B_stage4.3.branch2.6.bias_scale:0:0 */, meta[relay.Constant][219] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_stage4.3.branch2.6.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(232), float32] span=ConvBnFusion_BN_B_stage4.3.branch2.6.bias_DequantizeLinear:0:0 */;
  %724 = expand_dims(%723, axis=1, num_newaxis=2) /* ty=Tensor[(232, 1, 1), float32] */;
  %725 = nn.conv2d(%721, %722, padding=[0, 0, 0, 0], channels=232, kernel_size=[1, 1]) /* ty=Tensor[(1, 232, 7, 7), float32] span=Conv_247_quant:0:0 */;
  %726 = expand_dims(%724, axis=0) /* ty=Tensor[(1, 232, 1, 1), float32] */;
  %727 = add(%725, %726) /* ty=Tensor[(1, 232, 7, 7), float32] */;
  %728 = qnn.quantize(%727, 0.0172048f /* ty=float32 span=600_Conv_247_QuantizeLinear.600_scale:0:0 */, 0 /* ty=int32 span=600_Conv_247_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 7, 7), uint8] span=600_Conv_247_QuantizeLinear:0:0 */;
  %729 = qnn.dequantize(%702, 0.013558f /* ty=float32 span=586_Concat_235_QuantizeLinear.586_scale:0:0 */, 0 /* ty=int32 span=592_Concat_250_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=592_Concat_250_DequantizeLinear:0:0 */;
  %730 = qnn.dequantize(%728, 0.0172048f /* ty=float32 span=600_Conv_247_QuantizeLinear.600_scale:0:0 */, 0 /* ty=int32 span=600_Concat_250_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 7, 7), float32] span=600_Concat_250_DequantizeLinear:0:0 */;
  %731 = (%729, %730) /* ty=(Tensor[(1, 232, 7, 7), float32], Tensor[(1, 232, 7, 7), float32]) span=Concat_250_quant:0:0 */;
  %732 = concatenate(%731, axis=1) /* ty=Tensor[(1, 464, 7, 7), float32] span=Concat_250_quant:0:0 */;
  %733 = qnn.quantize(%732, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=602_Concat_250_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=602_Concat_250_QuantizeLinear:0:0 */;
  %734 = qnn.dequantize(%733, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=602_Reshape_252_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=602_Reshape_252_DequantizeLinear:0:0 */;
  %735 = reshape(%734, newshape=[1, 2, 232, 7, 7]) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=Reshape_252_quant:0:0 */;
  %736 = qnn.quantize(%735, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=604_Reshape_252_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), uint8] span=604_Reshape_252_QuantizeLinear:0:0 */;
  %737 = qnn.dequantize(%736, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=604_Transpose_253_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 2, 232, 7, 7), float32] span=604_Transpose_253_DequantizeLinear:0:0 */;
  %738 = transpose(%737, axes=[0, 2, 1, 3, 4]) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=Transpose_253_quant:0:0 */;
  %739 = qnn.quantize(%738, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=605_Transpose_253_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), uint8] span=605_Transpose_253_QuantizeLinear:0:0 */;
  %740 = qnn.dequantize(%739, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=605_Reshape_255_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 232, 2, 7, 7), float32] span=605_Reshape_255_DequantizeLinear:0:0 */;
  %741 = reshape(%740, newshape=[1, -1, 7, 7]) /* ty=Tensor[(1, 464, 7, 7), float32] span=Reshape_255_quant:0:0 */;
  %742 = qnn.quantize(%741, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=607_Reshape_255_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 464, 7, 7), uint8] span=607_Reshape_255_QuantizeLinear:0:0 */;
  %743 = qnn.dequantize(%742, 0.0172048f /* ty=float32 span=602_Concat_250_QuantizeLinear.602_scale:0:0 */, 0 /* ty=int32 span=607_Conv_256_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 464, 7, 7), float32] span=607_Conv_256_DequantizeLinear:0:0 */;
  %744 = qnn.dequantize(meta[relay.Constant][220] /* ty=Tensor[(1024, 464, 1, 1), int8] span=ConvBnFusion_W_conv5.0.weight_DequantizeLinear.ConvBnFusion_W_conv5.0.weight_quantized:0:0 */, 0.00324055f /* ty=float32 span=ConvBnFusion_W_conv5.0.weight_DequantizeLinear.ConvBnFusion_W_conv5.0.weight_scale:0:0 */, 0 /* ty=int32 span=ConvBnFusion_W_conv5.0.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1024, 464, 1, 1), float32] span=ConvBnFusion_W_conv5.0.weight_DequantizeLinear:0:0 */;
  %745 = qnn.dequantize(meta[relay.Constant][221] /* ty=Tensor[(1024), int32] span=ConvBnFusion_BN_B_conv5.1.bias_DequantizeLinear.ConvBnFusion_BN_B_conv5.1.bias_quantized:0:0 */, meta[relay.Constant][222] /* ty=Tensor[(1), float32] span=ConvBnFusion_BN_B_conv5.1.bias_DequantizeLinear.ConvBnFusion_BN_B_conv5.1.bias_scale:0:0 */, meta[relay.Constant][223] /* ty=Tensor[(1), int32] span=ConvBnFusion_BN_B_conv5.1.bias_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1024), float32] span=ConvBnFusion_BN_B_conv5.1.bias_DequantizeLinear:0:0 */;
  %746 = expand_dims(%745, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] */;
  %747 = nn.conv2d(%743, %744, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 7, 7), float32] span=Conv_256_quant:0:0 */;
  %748 = expand_dims(%746, axis=0) /* ty=Tensor[(1, 1024, 1, 1), float32] */;
  %749 = add(%747, %748) /* ty=Tensor[(1, 1024, 7, 7), float32] */;
  %750 = qnn.quantize(%749, 0.0124658f /* ty=float32 span=609_Conv_256_QuantizeLinear.609_scale:0:0 */, 0 /* ty=int32 span=609_Conv_256_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 1024, 7, 7), uint8] span=609_Conv_256_QuantizeLinear:0:0 */;
  %751 = qnn.dequantize(%750, 0.0124658f /* ty=float32 span=609_Conv_256_QuantizeLinear.609_scale:0:0 */, 0 /* ty=int32 span=609_Conv_256_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 1024, 7, 7), float32] span=609_Conv_256_DequantizeLinear:0:0 */;
  %752 = mean(%751, axis=[2, 3]) /* ty=Tensor[(1, 1024), float32] span=ReduceMean_259:0:0 */;
  %753 = qnn.quantize(%752, 0.00100331f /* ty=float32 span=611_Gemm_260_MatMul_QuantizeLinear.611_scale:0:0 */, 0 /* ty=int32 span=611_Gemm_260_MatMul_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 1024), uint8] span=611_Gemm_260_MatMul_QuantizeLinear:0:0 */;
  %754 = qnn.dequantize(meta[relay.Constant][224] /* ty=Tensor[(1024, 1000), int8] span=fc.weight_DequantizeLinear.fc.weight_quantized:0:0 */, 0.316708f /* ty=float32 span=fc.weight_DequantizeLinear.fc.weight_scale:0:0 */, 0 /* ty=int32 span=fc.weight_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1024, 1000), float32] span=fc.weight_DequantizeLinear:0:0 */;
  %755 = qnn.dequantize(%753, 0.00100331f /* ty=float32 span=611_Gemm_260_MatMul_QuantizeLinear.611_scale:0:0 */, 0 /* ty=int32 span=611_Gemm_260_MatMul_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 1024), float32] span=611_Gemm_260_MatMul_DequantizeLinear:0:0 */;
  %756 = transpose(%754, axes=[1, 0]) /* ty=Tensor[(1000, 1024), float32] span=Gemm_260_MatMul_quant:0:0 */;
  %757 = nn.dense(%755, %756, units=None, out_dtype="float32") /* ty=Tensor[(1, 1000), float32] span=Gemm_260_MatMul_quant:0:0 */;
  %758 = qnn.quantize(%757, 0.14666f /* ty=float32 span=output_MatMul_Gemm_260_MatMul_QuantizeLinear.output_MatMul_scale:0:0 */, 53 /* ty=int32 span=output_MatMul_Gemm_260_MatMul_QuantizeLinear:0:0 */, out_dtype="uint8", axis=0) /* ty=Tensor[(1, 1000), uint8] span=output_MatMul_Gemm_260_MatMul_QuantizeLinear:0:0 */;
  %759 = qnn.dequantize(%758, 0.14666f /* ty=float32 span=output_MatMul_Gemm_260_MatMul_QuantizeLinear.output_MatMul_scale:0:0 */, 53 /* ty=int32 span=output_MatMul_Gemm_260_MatMul_DequantizeLinear:0:0 */, out_dtype="float32", axis=0) /* ty=Tensor[(1, 1000), float32] span=output_MatMul_Gemm_260_MatMul_DequantizeLinear:0:0 */;
  add(%759, meta[relay.Constant][225] /* ty=Tensor[(1, 1000), float32] */) /* ty=Tensor[(1, 1000), float32] span=Gemm_260_Add:0:0 */
}

